[{"id":"85b15eaca077d021","type":"subflow","name":"Turn on/off conditioners (2)","info":"","category":"","in":[{"x":40,"y":240,"wires":[{"id":"cd2a7ed6b7280276"}]}],"out":[],"env":[],"meta":{},"color":"#A6BBCF","icon":"node-red-node-wol/onoff.png"},{"id":"1504c61e2f37e608","type":"function","z":"85b15eaca077d021","name":"GET data","func":"let ID = msg.payload.conditionerID;\nlet msgId = msg.payload.msgId;\n\nmsg.topic = `SELECT DISTINCT *, '${msgId}' as msgId `+\n            \"FROM smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \"+\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE ID = \"+ ID;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":380,"y":300,"wires":[["c28ca5b889a2f3fe"]]},{"id":"c28ca5b889a2f3fe","type":"mysql","z":"85b15eaca077d021","mydb":"3d82484f23ccce80","name":"Query","x":510,"y":300,"wires":[["ae0dd64443b99966"]]},{"id":"ae0dd64443b99966","type":"change","z":"85b15eaca077d021","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":595,"y":300,"wires":[["ae6a0500a08d9b6b"]],"l":false},{"id":"11f5bfbb81135205","type":"change","z":"85b15eaca077d021","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":375,"y":220,"wires":[["ae6a0500a08d9b6b"]],"l":false},{"id":"cd2a7ed6b7280276","type":"function","z":"85b15eaca077d021","name":"Assign ID to message","func":"let ID = makeID(16);\n\nlet dataType = msg.payload.dataType;\n\nif(dataType === \"Temperature\"){\n    let message1 = {\n        payload: {\n            dataType: dataType,\n            dataValue: msg.payload.dataValue,\n            msgId: ID\n        }\n    }\n    \n    let message2 = {\n        payload: {\n            conditionerID: msg.payload.conditionerID,\n            msgId: ID\n        }\n    }\n    return [message1, message2];\n}\n\n\n\n\n\nfunction makeID(size) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < size; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":240,"wires":[["11f5bfbb81135205"],["1504c61e2f37e608"]]},{"id":"ae6a0500a08d9b6b","type":"function","z":"85b15eaca077d021","name":"Async join","func":"if(msg.complete === undefined){\n    //È arrivato il messaggio con i dati raccolti dai sensori\n    //Get the values\n    \n    let msgId = msg.payload.msgId;\n    node.send([null, msg])\n    //Create or Get the dictionary\n    let dictionary = context.get(\"dictionary\");\n    \n    if(dictionary === undefined)\n        dictionary = {};\n    \n    let dictValue = dictionary[msgId];\n    if(dictValue === undefined){\n        // È il primo messaggio che arriva delle due parti\n        dictionary[msgId] = msg.payload\n        context.set(\"dictionary\", dictionary);\n    }\n    else{\n        // Stranamente è arrivata la query prima di questa parte,\n        // quindi fondiamo i due messaggi e lo inviamo.\n        node.send([null, {payload:\" Strano1\"}])\n        let mesg1 = {\n            payload : {\n                dataType: dataType,\n                dataValue: dataValue,\n                dbData: dictValue\n            }\n        }\n        delete dictionary[msgId];\n        node.send([msg1, msg1]);\n    }\n}\nelse{\n    //È arrivato il messaggio con il risultato della query dal db\n    //Create or Get the dictionary\n    node.send([null, msg])\n    let dictionary = context.get(\"dictionary\");\n    let msgId = msg.payload[0].msgId;\n    if(dictionary === undefined)\n        dictionary = {};\n        \n    let dictValue = dictionary[msgId];\n    if(dictValue === undefined){\n        //Non è ancora arrivato il messaggio con i dati dei sensori\n        dictionary[msgId] = {\n            dbData: msg.payload[0]\n        }\n        context.set(\"dictionary\", dictionary);\n    }\n    else{\n        //Caso normale, la query arriva dopo i dati dei sensori\n        let dataType = dictValue.dataType;\n        let dataValue = dictValue.dataValue;\n        \n        let mesg2 = {\n            payload: {\n                dataType: dataType,\n                dataValue: dataValue,\n                dbData: msg.payload[0]\n            }\n        };\n        delete dictionary[msgId];\n        node.send([mesg2,mesg2]);\n    } \n}\nnode.done();","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":710,"y":220,"wires":[["ac258e3dcb6ee3be","223ac7f17857c6f4"],[]],"outputLabels":["","DEBUG"]},{"id":"ac258e3dcb6ee3be","type":"function","z":"85b15eaca077d021","name":"Analyze and send","func":"let floor = msg.payload.dbData.floor;\nlet devID = msg.payload.dbData.boardNumber;\nlet apNumber = msg.payload.dbData.apartment_number;\n\nlet ideal_temp = msg.payload.dbData.ideal_temperature;\nlet temp = msg.payload.dataValue;\n\n\nlet OMA_actuation = 3306\n\nif(temp - ideal_temp > 3){\n    // The temperature is too high\n    let message = {\n        topic:`cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_actuation}/0/5850`,\n        payload:{\n            v:'on'\n        }\n    }\n    node.send(message);\n}\nelse if(temp -ideal_temp < -3){\n    // The temperature is too low\n    let message = {\n        topic:`cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_actuation}/1/5850`,\n        payload:{\n            v:'on'\n        }\n    }\n    node.send(message);\n}\nelse{\n    //The temperature is ok\n    let message = {\n        topic:`cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_actuation}/0/5850`,\n        payload:{\n            v:'off'\n        }\n    }\n    node.send(message);\n    let message2 = {\n        topic:`cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_actuation}/1/5850`,\n        payload:{\n            v:'off'\n        }\n    }\n    node.send(message2);\n}\n\nnode.done();","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":220,"wires":[["ba75e7ce7cf1a12f","bf4d73a41999f221"]]},{"id":"ba75e7ce7cf1a12f","type":"mqtt out","z":"85b15eaca077d021","name":"To Boards","topic":"","qos":"0","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1100,"y":220,"wires":[]},{"id":"bf4d73a41999f221","type":"debug","z":"85b15eaca077d021","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1070,"y":160,"wires":[]},{"id":"223ac7f17857c6f4","type":"debug","z":"85b15eaca077d021","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":870,"y":160,"wires":[]},{"id":"814fbd40c1d4b575","type":"subflow","name":"GET inactive conditioners (2)","info":"","category":"","in":[{"x":280,"y":220,"wires":[{"id":"6e252aace3434fa3"}]}],"out":[{"x":980,"y":220,"wires":[{"id":"8bdff2bd152009ac","port":0}]}],"env":[],"meta":{},"color":"#F3B567","icon":"node-red/db.svg"},{"id":"6e252aace3434fa3","type":"function","z":"814fbd40c1d4b575","name":"GET conditioners","func":"let floor = msg.payload.floor;\nlet apNumber = msg.payload.apNumber;\n\nmsg.topic = \"SELECT * from smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \"+\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE sac.connected = 0\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":220,"wires":[["a9e458d25899219e"]]},{"id":"a9e458d25899219e","type":"mysql","z":"814fbd40c1d4b575","mydb":"3d82484f23ccce80","name":"Query","x":610,"y":220,"wires":[["351f53cbda9fe5e6"]]},{"id":"351f53cbda9fe5e6","type":"change","z":"814fbd40c1d4b575","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":705,"y":220,"wires":[["8bdff2bd152009ac"]],"l":false},{"id":"8bdff2bd152009ac","type":"delay","z":"814fbd40c1d4b575","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":830,"y":220,"wires":[[]]},{"id":"b2cf7646765fc0be","type":"subflow","name":"Prepare tensorData for storage (2)","info":"","category":"","in":[{"x":180,"y":260,"wires":[{"id":"deb8e986f3e521a0"},{"id":"d22d78923df5b544"}]}],"out":[{"x":700,"y":260,"wires":[{"id":"a26b70f7c6811932","port":0}]}],"env":[],"meta":{},"color":"#FFCC66","icon":"node-red/parser-json.svg"},{"id":"a26b70f7c6811932","type":"function","z":"b2cf7646765fc0be","name":"Convert","func":"if(msg.complete === undefined){\n    context.set(\"tensorData\", msg.payload);\n    node.done();\n}\nelse{\n    let tensorData = context.get(\"tensorData\");\n    let temperature = tensorData.temperature;\n    let humidity = tensorData.humidity;\n    let conditionerID = msg.payload[0].ID;\n    \n    let msg1 = {\n        payload: {\n            dataType: \"Temperature\",\n            dataValue: temperature,\n            conditionerID: conditionerID\n        }\n    };\n    node.send(msg1);\n    \n    let msg2 = {\n        payload: {\n            dataType: \"Humidity\",\n            dataValue: humidity,\n            conditionerID: conditionerID\n        }\n    }\n    node.send(msg2);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":260,"wires":[[]]},{"id":"deb8e986f3e521a0","type":"change","z":"b2cf7646765fc0be","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":255,"y":260,"wires":[["a26b70f7c6811932"]],"l":false},{"id":"573f6988dc2e9853","type":"change","z":"b2cf7646765fc0be","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":485,"y":340,"wires":[["a26b70f7c6811932"]],"l":false},{"id":"d22d78923df5b544","type":"subflow:814fbd40c1d4b575","z":"b2cf7646765fc0be","name":"","x":330,"y":340,"wires":[["573f6988dc2e9853"]]},{"id":"dd07d03db28356b6","type":"subflow","name":"Async Store on DB (2)","info":"","category":"","in":[{"x":40,"y":280,"wires":[{"id":"c5306c52a8b2b2c2"}]}],"out":[],"env":[],"meta":{},"color":"#E7E7AE","icon":"node-red-contrib-buffer-array/buffer-array.png"},{"id":"c5306c52a8b2b2c2","type":"function","z":"dd07d03db28356b6","name":"GET last measures","func":"let msgId = makeID(16);\n\nlet dataValue = msg.payload.dataValue;\nlet dataType = msg.payload.dataType;\nlet conditionerID = msg.payload.conditionerID;\n\nlet table = \"humidity\";\nif(dataType === \"temperature\")\n    table = \"temperature\";\nlet query = {\n    payload: \"\",\n    topic: `SELECT *, '${msgId}' AS msgId FROM temperature `+\n            `WHERE conditionerID = ${conditionerID} `+\n            \"ORDER BY year DESC, month DESC, day DESC,\"+\n            \"hour DESC, minute DESC LIMIT 1;\"+\n            `SELECT *, '${msgId}' AS msgId FROM humidity `+\n            `WHERE conditionerID = ${conditionerID} `+\n            \"ORDER BY year DESC, month DESC, day DESC,\"+\n            \"hour DESC, minute DESC LIMIT 1;\"\n}\n\nmsg.payload.msgId = msgId;\nreturn [query, msg];\n\n\n\n\n\n\n\nfunction makeID(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":280,"wires":[["b47ace2009d3b048"],["a75ab3b7f0a5b535"]],"outputLabels":["QUERY","DATA"]},{"id":"a75ab3b7f0a5b535","type":"change","z":"dd07d03db28356b6","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":355,"y":300,"wires":[["d1d77e618b0d521d"]],"l":false},{"id":"b47ace2009d3b048","type":"mysql","z":"dd07d03db28356b6","mydb":"3d82484f23ccce80","name":"Query","x":390,"y":220,"wires":[["fbbc65db04532589"]]},{"id":"fbbc65db04532589","type":"delay","z":"dd07d03db28356b6","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":530,"y":220,"wires":[["4c5768c7de17b140"]]},{"id":"4c5768c7de17b140","type":"change","z":"dd07d03db28356b6","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":635,"y":220,"wires":[["d1d77e618b0d521d"]],"l":false},{"id":"d1d77e618b0d521d","type":"function","z":"dd07d03db28356b6","name":"Async Join","func":"if(msg.complete === undefined){\n\n    // siamo al messaggio proveniente dai sensori\n    let dictionary = context.get(\"dictionary\");\n    if(dictionary === undefined){\n        dictionary = {};\n    }\n    let msgId = msg.payload.msgId;\n    let dictValue = dictionary[msgId];\n    if(dictValue === undefined){\n        // Caso normale\n        dictionary[msgId] = msg.payload;\n        context.set(\"dictionary\", dictionary);\n    }\n    else{\n        // Stranamente è arrivato prima il messaggio dal DB\n        let message = {\n            payload : {\n                dataType: msg.payload.dataType,\n                dataValue: msg.payload.dataValue,\n                lastTempMeasure: dictValue[0][0],\n                lastHumMeasure: dictValue[1][0]\n            }\n        }\n        delete dictionary[msgId];\n        node.send(message);\n    }\n}\nelse{\n    \n    // siamo al messaggio proveniente dal db\n    let dictionary = context.get(\"dictionary\");\n    if(dictionary === undefined){\n        dictionary = {}\n    }\n    let dbMsg = msg.payload;\n    if(dbMsg !== undefined){\n        // Se dbMsg è undefined non c'è modo per noi \n        // di recuperare il msgId. È assurdo che contenga una\n        // stringa vuota, probabilmente c'è stato un errore col DB.\n        // In quel caso non facciamo nulla, quindi gestiamo solo il caso\n        // in cui dbMsg abbia contenuto\n        let msgId = dbMsg[0][0].msgId;\n        let dictValue = dictionary[msgId];\n        \n        if(dictValue === undefined){\n            // Non abbiamo ricevuto i dati precedenti. È strano,\n            // ma non possiamo fare altro che salvare i dati della\n            // query nel dizionario e aspettare che arrivino gli altri\n            // dati.\n            dictionary[msgId] = dbMsg;\n        }\n        else{\n            // Ora abbiamo tutti i dati, possiamo inviare il messaggio\n            let message = {\n                payload: {\n                    dataType: dictValue.dataType,\n                    dataValue: dictValue.dataValue,\n                    lastTempMeasure: dbMsg[0][0],\n                    lastHumMeasure: dbMsg[1][0]\n                }\n            }\n            node.send(message);\n        }\n            \n    }\n}\nnode.done();","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":300,"wires":[["8c30dc56e5c0a9d8"]]},{"id":"705d044fc7340590","type":"mysql","z":"dd07d03db28356b6","mydb":"3d82484f23ccce80","name":"Execute","x":1080,"y":300,"wires":[[]]},{"id":"8c30dc56e5c0a9d8","type":"function","z":"dd07d03db28356b6","name":"INSERT","func":"let type = msg.payload.dataType;\nlet value = msg.payload.dataValue;\nlet date = new Date()\n\nlet year = date.getFullYear();\nlet month = date.getMonth()+1;\nlet day = date.getDate();\nlet hour = date.getHours();\nlet minute = date.getMinutes();\nlet second = 0;\n\nlet lastTempMeasure = msg.payload.lastTempMeasure;\nlet lastHumMeasure = msg.payload.lastHumMeasure;\nlet conditionerID = lastTempMeasure.conditionerID;\nif(type === \"Temperature\"){\n    let message = {\n        payload: \"\",\n        topic: \"INSERT INTO temperature (conditionerID, year, month, \"+\n                \"day, hour, minute, second, recent_temperature, \"+\n                \"recent_humidity, target_temperature) VALUES (\"+\n                conditionerID+\", \"+\n                year+\", \"+\n                month+\", \"+\n                day+\", \"+\n                hour+\", \"+\n                minute+\", \"+\n                \"0.0, \"+\n                lastTempMeasure.target_temperature+\", \"+\n                lastHumMeasure.target_humidity+\", \"+\n                value+\")\"\n    }\n    return message;\n}\nelse if (type === \"Humidity\"){\n    let message = {\n        payload: \"\",\n        topic: \"INSERT INTO humidity (conditionerID, year, month, \"+\n                \"day, hour, minute, second, recent_temperature, \"+\n                \"recent_humidity, target_humidity) VALUES (\"+\n                conditionerID+\", \"+\n                year+\", \"+\n                month+\", \"+\n                day+\", \"+\n                hour+\", \"+\n                minute+\", \"+\n                \"0.0, \"+\n                lastTempMeasure.target_temperature+\", \"+\n                lastHumMeasure.target_humidity+\", \"+\n                value+\")\"\n    }\n    return message;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":300,"wires":[["705d044fc7340590","2fac590388c804b8"]]},{"id":"2fac590388c804b8","type":"debug","z":"dd07d03db28356b6","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1030,"y":240,"wires":[]},{"id":"dc3d789e5e605436","type":"subflow","name":"GET conditionerID (2)","info":"","category":"","in":[{"x":240,"y":300,"wires":[{"id":"70ba384f6d89decb"}]}],"out":[{"x":940,"y":300,"wires":[{"id":"1cfec0c24b94d176","port":0}]}],"env":[],"meta":{},"color":"#F3B567","icon":"node-red/db.svg"},{"id":"70ba384f6d89decb","type":"function","z":"dc3d789e5e605436","name":"GET conditionerID","func":"let devID = msg.payload.device;\nlet floor = msg.payload.floor;\nlet apartment = msg.payload.apartment;\nlet messageId = msg.payload.messageId;\n\nmsg.topic = `SELECT sac.ID, '${messageId}' AS messageId `+\n            \"FROM smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \"+\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE sac.boardNumber = \"+devID+\" \"+\n            \"AND ap.apartment_number = \"+apartment+\" \"+\n            \"AND ap.floor = \"+floor;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":300,"wires":[["bad523c5dbdd662d"]]},{"id":"bad523c5dbdd662d","type":"mysql","z":"dc3d789e5e605436","mydb":"3d82484f23ccce80","name":"Query","x":570,"y":300,"wires":[["3f6c80d32ae388db"]]},{"id":"3f6c80d32ae388db","type":"change","z":"dc3d789e5e605436","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":685,"y":300,"wires":[["1cfec0c24b94d176"]],"l":false},{"id":"1cfec0c24b94d176","type":"delay","z":"dc3d789e5e605436","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":810,"y":300,"wires":[[]]},{"id":"78acb5fc6a8d7692","type":"subflow","name":"Async Input Management (2)","info":"","category":"","in":[{"x":60,"y":240,"wires":[{"id":"b17a1d2430f25882"},{"id":"426e18d558f3493b"}]}],"out":[{"x":1020,"y":260,"wires":[{"id":"082d5f2ed895112a","port":0}]}],"env":[],"meta":{},"color":"#D7D7A0","icon":"node-red-contrib-buffer-array/buffer-array.png"},{"id":"b17a1d2430f25882","type":"function","z":"78acb5fc6a8d7692","name":"Format data","func":"let topic = msg.topic;\nlet topicLevels = topic.split('/');\nlet floor = topicLevels[2];\nlet apartment = topicLevels[3];\nlet device = topicLevels[4];\nlet dataType = topicLevels[5];\nlet dataValue\n\nlet messageId = makeID(16);\n\nswitch(topicLevels[5]){\n    case \"3303\": \n        dataType = \"Temperature\"; \n        dataValue = convertToFahrenheit(msg.payload.v)\n        break;\n    case \"3304\":\n        dataType = \"Humidity\"; \n        dataValue = msg.payload.v;\n        break;\n    default: dataType = \"Unknown\"; break;\n}\n\nlet msg1 = {\n    payload: {\n        floor: floor,\n        apartment: apartment,\n        device: device,\n        messageId: messageId\n    }\n}\n\n\nlet msg2 = {\n    payload : {\n        dataType: dataType,\n        dataValue: dataValue,\n        messageId: messageId\n    }\n}\nreturn [msg1,msg2];\n\n\nfunction makeID(size) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < size; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\n\nfunction convertToFahrenheit(celsiusValue){\n    return (celsiusValue * 1.8) + 32.0;\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":240,"wires":[["21598a6284594324"],["bced0c5630afc4fa"]],"outputLabels":["APARTMENT DATA","SENSOR DATA"]},{"id":"21598a6284594324","type":"subflow:dc3d789e5e605436","z":"78acb5fc6a8d7692","name":"","x":570,"y":200,"wires":[["082d5f2ed895112a"]]},{"id":"bced0c5630afc4fa","type":"change","z":"78acb5fc6a8d7692","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":495,"y":260,"wires":[["082d5f2ed895112a"]],"l":false},{"id":"082d5f2ed895112a","type":"function","z":"78acb5fc6a8d7692","name":"Async Join","func":"if(msg.complete === undefined){\n    //È arrivato il messaggio con i dati raccolti dai sensori\n    //Get the values\n    \n    let msgId = msg.payload.messageId;\n    \n    //Create or Get the dictionary\n    let dictionary = context.get(\"dictionary\");\n    \n    if(dictionary === undefined)\n        dictionary = {};\n    \n    let dictValue = dictionary[msgId];\n    if(dictValue === undefined){\n        // È il primo messaggio che arriva delle due parti\n        node.send([null, {payload: \"Primo messaggio\"}])\n        let dataType = msg.payload.dataType;\n        let dataValue = msg.payload.dataValue;\n        \n        dictionary[msgId] = {\n            dataType: dataType,\n            dataValue: dataValue\n        };\n        node.send([null, {payload:dictionary}]);\n        context.set(\"dictionary\", dictionary);\n    }\n    else{\n        // Stranamente è arrivata la query prima di questa parte,\n        // quindi fondiamo i due messaggi e lo inviamo.\n        node.send([null, {payload:\" Strano1\"}])\n        let conditionerID = dictValue.conditionerID;\n        let mesg1 = {\n            payload : {\n                dataType: dataType,\n                dataValue: dataValue,\n                conditionerID: conditionerID\n            }\n            \n        }\n        \n        delete dictionary[msgId];\n        \n        node.send([msg1, msg1]);\n    }\n}\nelse{\n    node.send([null, {payload: \"OK 2\"}]);\n    //È arrivato il messaggio con il risultato della query dal db\n    let conditionerID = msg.payload[0].ID;\n    //Create or Get the dictionary\n    let dictionary = context.get(\"dictionary\");\n    let msgId = msg.payload[0].messageId;\n    if(dictionary === undefined)\n        dictionary = {};\n        \n    let dictValue = dictionary[msgId];\n    if(dictValue === undefined){\n        //Non è ancora arrivato il messaggio con i dati dei sensori\n        dictionary[msgId] = {\n            conditionerID: conditionerID\n        }\n        context.set(\"dictionary\", dictionary);\n    }\n    else{\n        //Caso normale, la query arriva dopo i dati dei sensori\n        let dataType = dictValue.dataType;\n        let dataValue = dictValue.dataValue;\n        \n        let mesg2 = {\n            payload: {\n                dataType: dataType,\n                dataValue: dataValue,\n                conditionerID: conditionerID\n            }\n        };\n        \n        delete dictionary[msgId];\n        node.send([mesg2,mesg2]);\n    } \n}\nnode.done();","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":260,"wires":[[],[]],"outputLabels":["RESULT","DEBUG"]},{"id":"426e18d558f3493b","type":"debug","z":"78acb5fc6a8d7692","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":190,"y":200,"wires":[]},{"id":"f1dbce9216dad39b","type":"subflow","name":"List and Split Conditioners (2)","info":"","category":"","in":[{"x":160,"y":260,"wires":[{"id":"ade47e84d0e27adb"},{"id":"18098ab7fe76a868"}]}],"out":[{"x":680,"y":200,"wires":[{"id":"df1c3d4328b576bf","port":0}]},{"x":700,"y":300,"wires":[{"id":"a02e86ce65d9de69","port":0}]}],"env":[],"meta":{},"color":"#AAAA66","outputLabels":["DEVICES","TENSORFLOW"],"icon":"font-awesome/fa-list-ol"},{"id":"ade47e84d0e27adb","type":"function","z":"f1dbce9216dad39b","name":"Get Conditioners","func":"let topicParts = msg.topic.split('/');\n\nlet floor = topicParts[2];\nlet apNumber = topicParts[3];\n\n\nlet msg1 ={\n    topic : \"SELECT DISTINCT * FROM smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \" +\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE ap.floor = \"+floor+\" \"+\n            \"AND ap.apartment_number = \"+apNumber+\" \"+\n            \"AND sac.active = 1 \"+\n            \"AND sac.connected = 1\"\n    \n}\n\nlet msg2 ={\n    topic : \"SELECT DISTINCT * FROM smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \" +\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE ap.floor = \"+floor+\" \"+\n            \"AND ap.apartment_number = \"+apNumber+\" \"+\n            \"AND sac.active = 1 \"+\n            \"AND sac.connected = 0\"\n    \n}\nreturn [msg1,msg2];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":260,"wires":[["df1c3d4328b576bf"],["a02e86ce65d9de69"]]},{"id":"70e77949814da970","type":"comment","z":"f1dbce9216dad39b","name":"DOC","info":"In this subflow we obtain the list of smartAirConditioners of the user, understanding if there is also someone disconnected","x":210,"y":100,"wires":[]},{"id":"df1c3d4328b576bf","type":"mysql","z":"f1dbce9216dad39b","mydb":"3d82484f23ccce80","name":"Query","x":490,"y":200,"wires":[[]]},{"id":"7af2dc388150f2f7","type":"function","z":"f1dbce9216dad39b","name":"Split Conditioners","func":"let connectedConditioners = [];\nlet disconnectedConditioners = [];\n\nmsg.payload.forEach(conditioner => {\n   if(conditioner.connected){\n       //CONNECTED\n       connectedConditioners.push(conditioner);\n   }\n   else{\n       //DISCONNECTED\n       disconnectedConditioners.push(conditioner);\n   }\n});\n\nlet msg1 = {\n    payload: connectedConditioners\n}\n\nlet msg2 = {\n    payload: disconnectedConditioners\n}\nreturn [msg1, msg2];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":670,"y":400,"wires":[[],[]],"outputLabels":["CONNECTED LIST","DISCONNECTED LIST"]},{"id":"a02e86ce65d9de69","type":"mysql","z":"f1dbce9216dad39b","mydb":"3d82484f23ccce80","name":"Query","x":490,"y":300,"wires":[[]]},{"id":"18098ab7fe76a868","type":"debug","z":"f1dbce9216dad39b","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":270,"y":200,"wires":[]},{"id":"f2027c49525477b2","type":"subflow","name":"Compare prevision & weather (2)","info":"","category":"","in":[{"x":60,"y":280,"wires":[{"id":"bb5d7f7395e1bac7"},{"id":"6f0af91d6793f3bb"}]}],"out":[{"x":1240,"y":280,"wires":[{"id":"24ba45b708c4cea6","port":0},{"id":"315a119c7563ab80","port":0}]}],"env":[],"meta":{},"color":"#34D2FF","outputLabels":["VALUES","APARTMENT"],"icon":"font-awesome/fa-sun-o"},{"id":"bb5d7f7395e1bac7","type":"function","z":"f2027c49525477b2","name":"Get Location","func":"let topic = msg.topic;\nlet topicParts = topic.split('/');\n\nlet floor = topicParts[2];\nlet apartment = topicParts[3];\n\n//Now we create the query\nmsg.topic = \"SELECT * \" +\n            \"FROM apartment \"+\n            \"WHERE floor = \"+floor+\" \"+\n            \"AND apartment_number = \"+apartment;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":130,"y":440,"wires":[["413edd558f35c486"]]},{"id":"413edd558f35c486","type":"mysql","z":"f2027c49525477b2","mydb":"3d82484f23ccce80","name":"Query","x":270,"y":440,"wires":[["512c2dbd2bfc6efb"]]},{"id":"512c2dbd2bfc6efb","type":"function","z":"f2027c49525477b2","name":"Create web query","func":"let openWeatherApiKey = \"be38a76c3fbd03f63957ba455cfa6314\";\n\nif(msg.payload[0].length === 0){\n    /* La query non ha restituito nulla.\n     * Non sappiamo la località nè tantomeno la qualità dell'edificio,\n     * quindi processiamo il valore di tensorFlow così com'è arrivato\n     */\n    abortAverage();\n}\n\nelse{\n    /*\n     * La query ha restituito dei valori, però devono essere tutti e \n     * 3 valorizzati, altrimenti l'algoritmo non può funzionare\n     */\n    let latitude = msg.payload[0].latitude;\n    let longitude = msg.payload[0].longitude;\n    //let latitude = 38.907983;\n    //let longitude = 16.578234;\n    let quality = msg.payload[0].building_quality;\n    \n    if(latitude === undefined\n       || longitude === undefined\n       || quality === undefined){\n           abortAverage();\n    }\n\n    let msg1 = {\n        payload: quality,\n        complete: true\n    }\n    let URL = \"https://api.openweathermap.org/data/2.5/weather\";\n    URL += \"?lat=\"+latitude;\n    URL += \"&lon=\"+longitude;\n    URL += \"&units=imperial\";\n    URL += \"&appid=\"+openWeatherApiKey;\n    let msg2 = {\n        url: URL\n    };\n    return [msg1, msg2];\n}\n\n\nfunction abortAverage(){\n    let msg1 = {\n        payload: 0,\n        complete: true\n    }\n    return [msg1, null];\n}\n\n\n","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":360,"wires":[["6f0af91d6793f3bb"],["240f53ccfc5ae54b"],[]],"outputLabels":["Quality","OpenWeatherMap Query","DEBUG"]},{"id":"240f53ccfc5ae54b","type":"http request","z":"f2027c49525477b2","name":"OpenWeatherMap API","method":"GET","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":560,"y":440,"wires":[["fa8635cab044a852"]]},{"id":"fa8635cab044a852","type":"json","z":"f2027c49525477b2","name":"","property":"payload","action":"","pretty":false,"x":730,"y":440,"wires":[["06785787e3db8bb9"]]},{"id":"24ba45b708c4cea6","type":"function","z":"f2027c49525477b2","name":"Average","func":"if(msg.complete === undefined){\n\n    context.set(\"tensorData\", msg.payload)\n    node.done();\n}\n\nelse{\n    let tensorData = context.get(\"tensorData\");\n    let predictedHumidity = tensorData.predictedHumidity;\n    let predictedTemp = tensorData.predictedTemperature;\n    let quality = tensorData.quality;\n    node.send([null, null, {payload: tensorData}])\n    let floor = tensorData.floor;\n    let apartment = tensorData.apartment;\n    let actualTemp = msg.payload.actualTemperature;\n    let actualHum = msg.payload.actualHumidity;\n    \n        \n    let avgTemp;\n    let avgHum;\n    \n    switch(quality){\n        case 1: avgTemp= predictedTemp*0.1 + actualTemp*0.9; break;\n        case 2: avgTemp= predictedTemp*0.3 + actualTemp*0.7; break;\n        case 3: avgTemp= predictedTemp*0.5 + actualTemp*0.5; break;\n        case 4: avgTemp= predictedTemp*0.7 + actualTemp*0.3; break;\n        case 5: avgTemp= predictedTemp*0.9 + actualTemp*0.1; break;\n        default: avgTemp = predictedTemp;\n    }\n    \n    switch(quality){\n        case 1: avgHum= predictedHumidity*0.1 + actualHum*0.9; break;\n        case 2: avgHum= predictedHumidity*0.3 + actualHum*0.7; break;\n        case 3: avgHum= predictedHumidity*0.5 + actualHum*0.5; break;\n        case 4: avgHum= predictedHumidity*0.7 + actualHum*0.3; break;\n        case 5: avgHum= predictedHumidity*0.9 + actualHum*0.1; break;\n        default: avgHum = predictedHumidity;\n    }\n    \n    msg.payload = {\n        temperature: avgTemp,\n        humidity: avgHum,\n        floor: floor,\n        apartment: apartment\n    }\n    let msg2 = {\n        payload: {\n            floor: floor,\n            apartment: apartment\n        }\n    }\n    return [msg, msg2, null];\n}\n\n","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":380,"wires":[[],[],[]],"outputLabels":["","","DEBUG"]},{"id":"6f0af91d6793f3bb","type":"function","z":"f2027c49525477b2","name":"Join quality & Tensorflow Data","func":"if(msg.complete===undefined){\n    context.set(\"tensorData\", msg.payload);\n    context.set(\"topic\",msg.topic);\n    node.done();\n}\nelse{\n    let tensorData = context.get(\"tensorData\");\n    let topic = context.get(\"topic\");\n    context.set(\"tensorData\", '');\n    context.set(\"topic\", '');\n    \n    let topicParts = topic.split(\"/\");\n    let predictedTemperature = tensorData.predictedTemperature;\n    let predictedHumidity = tensorData.predictedHumidity;\n    let quality = msg.payload;\n    \n    if(quality == 0){\n        /* Non abbiamo dati per andare avanti con la media\n         * quindi restituiamo direttamente i valori di tensorFlow\n         */\n        let msg = {\n            payload: {\n                predictedHumidity: predictedHumidity,\n                predictedTemperature: predictedTemperature,\n                floor: topicParts[2],\n                apartment: topicParts[3]\n            }\n            \n        }\n        node.send([msg, null]);\n    }\n    else{\n        /*\n         * Possiamo procedere con il calcolo dell'average\n         */\n        let msg = {\n            payload: {\n                predictedHumidity: predictedHumidity,\n                predictedTemperature: predictedTemperature,\n                quality: quality,\n                floor: topicParts[2],\n                apartment: topicParts[3]\n            },\n            complete : undefined\n        };\n        node.send([null, msg]);\n    }\n    node.done();\n    \n    \n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":280,"wires":[["315a119c7563ab80"],["24ba45b708c4cea6"]],"outputLabels":["ABORTED","AVERAGE"]},{"id":"06785787e3db8bb9","type":"function","z":"f2027c49525477b2","name":"Filter","func":"let actualHum = msg.payload.main.humidity;\nlet actualTemp = msg.payload.main.temp;\n\nmsg = {\n    payload: {\n        actualTemperature: actualTemp,\n        actualHumidity: actualHum\n    },\n    complete: true\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":850,"y":440,"wires":[["24ba45b708c4cea6"]]},{"id":"315a119c7563ab80","type":"function","z":"f2027c49525477b2","name":"Split","func":"let msg1 = {\n    payload: {\n        predictedTemperature: msg.payload.predictedTemperature,\n        predictedHumidity: msg.payload.predictedHumidity\n    }\n};\n\nlet msg2 = {\n    payload: {\n        floor: msg.payload.floor,\n        apartment: msg.payload.apartment\n    }\n}\nreturn [msg1, msg2];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":280,"wires":[[],[]],"outputLabels":["Values","Apartment"],"icon":"node-red/split.svg"},{"id":"9dc7a7220c5fc898","type":"subflow","name":"GET apartmentID (2)","info":"","category":"","in":[{"x":80,"y":160,"wires":[{"id":"6bec8513cbb216a3"}]}],"out":[{"x":700,"y":160,"wires":[{"id":"6bec8513cbb216a3","port":0}]},{"x":690,"y":220,"wires":[{"id":"38fd6793650986fa","port":0}]}],"env":[],"meta":{},"color":"#F3B567","outputLabels":["ORIGINAL MESSAGE","QUERY RESULT"],"icon":"node-red/db.svg"},{"id":"6bec8513cbb216a3","type":"function","z":"9dc7a7220c5fc898","name":"GET apartmentID","func":"flow.set(msg.payload.chatId+\"_new_cond2\", msg.payload.content)\n\nmsg.topic= \"SELECT ApartmentId \"+\n           \"FROM user \"+\n           \"WHERE chatId='\"+msg.payload.chatId+\"'\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":250,"y":160,"wires":[["ef9145c6e56b363e"]]},{"id":"ef9145c6e56b363e","type":"mysql","z":"9dc7a7220c5fc898","mydb":"3d82484f23ccce80","name":"Query","x":430,"y":220,"wires":[["38fd6793650986fa"]]},{"id":"38fd6793650986fa","type":"change","z":"9dc7a7220c5fc898","name":"","rules":[{"t":"set","p":"payload.rooms","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":525,"y":220,"wires":[[]],"l":false},{"id":"2d600bbbe6aabcda","type":"subflow","name":"GET user rooms (2)","info":"","category":"","in":[{"x":140,"y":200,"wires":[{"id":"9e19e1b3bf85b330"}]}],"out":[{"x":620,"y":200,"wires":[{"id":"44402824e9235922","port":0}]}],"env":[],"meta":{},"color":"#F3B567","icon":"node-red/db.svg"},{"id":"9e19e1b3bf85b330","type":"function","z":"2d600bbbe6aabcda","name":"GET user rooms","func":"msg.topic = \"SELECT DISTINCT sac.name \"+\n            \"FROM smartAirConditioner AS sac, user AS u \"\n            \"WHERE u.chatId = \"+msg.uid+\" \"+\n            \"AND u.apartmentID = sac.apartmentID\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":280,"y":200,"wires":[["15d4782aad68146d"]]},{"id":"15d4782aad68146d","type":"mysql","z":"2d600bbbe6aabcda","mydb":"3d82484f23ccce80","name":"Query","x":450,"y":200,"wires":[["44402824e9235922"]]},{"id":"44402824e9235922","type":"change","z":"2d600bbbe6aabcda","name":"","rules":[{"t":"set","p":"payload.rooms","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":545,"y":200,"wires":[[]],"l":false},{"id":"c02edee2ee18141e","type":"tab","label":"Slave - Handle Conditioner","disabled":false,"info":"","env":[]},{"id":"108ff1b06807069c","type":"comment","z":"c02edee2ee18141e","name":"Add a new conditioner","info":"","x":200,"y":20,"wires":[]},{"id":"56dd5598549332f0","type":"comment","z":"c02edee2ee18141e","name":"Remove an existing conditioner","info":"","x":290,"y":480,"wires":[]},{"id":"a41b63c256393672","type":"comment","z":"c02edee2ee18141e","name":"Activate/Deactivate an existing conditioner","info":"","x":320,"y":860,"wires":[]},{"id":"ee84e1d6bce0ce2e","type":"function","z":"c02edee2ee18141e","name":"Ask name","func":"msg.payload = {\n    content: \"What is the name of the room?\",\n    type : \"message\",\n    chatId: msg.payload.chatId\n}\n//change status of FSM\nglobal.set(\"\"+msg.payload.chatId, \"new_cond1\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":60,"wires":[["b5c78e631047a923"]]},{"id":"42df02c813d1f2b2","type":"function","z":"c02edee2ee18141e","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"new_cond1\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":120,"wires":[["94b628f47c67cf94"]],"icon":"node-red/switch.svg","l":false},{"id":"8e310bb6975a51a7","type":"switch","z":"c02edee2ee18141e","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":120,"wires":[[],["42df02c813d1f2b2"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"94b628f47c67cf94","type":"function","z":"c02edee2ee18141e","name":"Ask DeviceID","func":"//change status of FSM\nglobal.set(\"\"+msg.payload.chatId, \"new_cond2\");\n\nflow.set(msg.payload.chatId+\"_new_cond1\", msg.payload.content);\n\nmsg.payload = {\n    content: \"Set the device ID\",\n    type : \"message\",\n    chatId: msg.payload.chatId\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":120,"wires":[["b5c78e631047a923"]]},{"id":"0b44d44b05255131","type":"function","z":"c02edee2ee18141e","name":"INSERT Conditioner","func":"if(msg.complete===undefined){\n    context.set(\"chatId\", msg.payload.chatId);\n    context.set(msg.payload.chatId+\"_new_cond2\", msg.payload.content)\n    node.done();\n}\nelse{\n    \n    let chatId = context.get(\"chatId\");\n    let roomName = flow.get(chatId+\"_new_cond1\");\n    let deviceID = context.get(chatId+\"_new_cond2\");\n    let apartmentID = msg.payload[0].ApartmentId;\n    \n    /*\n    let message = {\n        payload: \"\",\n        complete: true\n    };*/\n    \n    msg.topic = \"INSERT INTO smartAirConditioner (apartmentID,\"+\n                \"boardNumber, name, active, \"+\n                \"connected, ideal_temperature) \"+\n                \"VALUES(\"+apartmentID+\" , \"+ // apartmentID\n                deviceID+\" , '\"+ // deviceID\n                roomName+\"' , \"+ //roomName\n                1 +\" , \"+ //Active Flag\n                0 +\" , \"+ //connected\n                22+\");\"+ // Ideal Temperature\n                \"SELECT * FROM smartAirConditioner \"+\n                \"WHERE apartmentID = \"+apartmentID+\" \"+\n                \"AND boardNumber = \"+deviceID;\n    \n     \n    //reset status of FSM and of context\n    global.set(\"\"+chatId, \"\");\n    context.set(\"chatId\",\"\");\n    flow.set(chatId+\"_new_cond1\", \"\");\n    context.set(chatId+\"_new_cond2\", \"\");\n    \n    node.send(msg);\n    node.done();\n}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":300,"wires":[["93589f29013917cc"]]},{"id":"4ee2f1b06e04b6e5","type":"comment","z":"c02edee2ee18141e","name":"Set ideal temperature","info":"","x":260,"y":1260,"wires":[]},{"id":"3f5dd09e94f1c9a2","type":"mqtt in","z":"c02edee2ee18141e","name":"Cmd from Master","topic":"cmd/slave/5/1/conditioner/add","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":160,"y":60,"wires":[["ee84e1d6bce0ce2e"]]},{"id":"d583bc80c688abb6","type":"mqtt in","z":"c02edee2ee18141e","name":"Cmd from Master","topic":"cmd/slave/5/1/conditioner/remove","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":160,"y":520,"wires":[["a490b863201fe038","60f352047f85459f"]]},{"id":"f516975e2b87ccef","type":"mqtt in","z":"c02edee2ee18141e","name":"Cmd from Master","topic":"cmd/slave/5/1/conditioner/set","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":160,"y":1300,"wires":[["7d2a0fbeb44d2363","cb236188de238146"]]},{"id":"2f74c88382ec8bfd","type":"function","z":"c02edee2ee18141e","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"new_cond2\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":200,"wires":[["02ed1781165198a0"]],"icon":"node-red/switch.svg","l":false},{"id":"bcf338772e757513","type":"switch","z":"c02edee2ee18141e","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":200,"wires":[[],["2f74c88382ec8bfd"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"93589f29013917cc","type":"mysql","z":"c02edee2ee18141e","mydb":"3d82484f23ccce80","name":"Execute1","x":840,"y":300,"wires":[["be5a1d9d446dd8bd","cc760b3f15ca3e67"]]},{"id":"a490b863201fe038","type":"function","z":"c02edee2ee18141e","name":"Ask name","func":"if(msg.complete === undefined){\n    context.set(\"telegramID\", msg.payload.chatId);\n    node.done();\n}\nelse{\n    let rooms = msg.payload.rooms;\n    msg.payload = {\n        content: \"What is the name of the room where is located \"+\n                 \"the conditioner you want to delete?\",\n        type : \"message\",\n        chatId: context.get(\"telegramID\")\n    }\n    \n    //Passiamo la lista delle stanze dell'utente come opzioni di\n    //risposta\n    let options = [];\n    for(let i = 0; i< rooms.length; i++){\n        options[i]=rooms[i].name;\n    }\n    msg.payload.options = options;\n    \n    //change status of FSM\n    global.set(\"\"+msg.payload.chatId, \"del_cond1\");\n    node.send(msg);\n    \n    let roomList = roomListAsString(rooms);\n    let msg2 = {\n        payload: {\n            content: roomList,\n            type: \"message\",\n            chatId: msg.payload.chatId\n        }\n    }\n    \n    //Wait for 0.5 seconds\n    await new Promise(r => setTimeout(r, 500));\n    \n    \n    node.send(msg2);\n    node.done();\n}\n\n\nfunction roomListAsString(rooms){\n    let result = \"Possible answers: \";\n    rooms.forEach(room => {\n        result += room.name+\", \"\n    })\n    return result.substring(0, result.length-1);\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":520,"wires":[["623dd9a121165867"]]},{"id":"fc8cd34b94a67d7b","type":"function","z":"c02edee2ee18141e","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"del_cond1\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":660,"wires":[["f50a8dc35cecfa2d","1fd3ea348b9cef4f"]],"icon":"node-red/switch.svg","l":false},{"id":"ee9c1c76bce9920b","type":"switch","z":"c02edee2ee18141e","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":660,"wires":[[],["fc8cd34b94a67d7b"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"1fd3ea348b9cef4f","type":"function","z":"c02edee2ee18141e","name":"DELETE query","func":"if(msg.complete === undefined){\n    context.set(\"room\", msg.payload.content.trim());\n    context.set(\"chatId\", msg.payload.chatId);\n    node.done();\n}\nelse{\n    \n    let telegramId = context.get(\"chatId\");\n    let apartmentID = msg.payload[0].ApartmentId;\n    let room = context.get(\"room\");\n    \n    //let debugMsg = {\n    //    payload:telegramId\n    //}\n    //node.send([null, null, debugMsg]);\n    \n    let dataMsg = {\n        payload: {\n            chatId: telegramId\n        }\n    }\n    \n    //Reset status of FSM and context variables\n    global.set(\"\"+telegramId, \"\");\n    context.set(\"chatId\",\"\");\n    context.set(\"room\",\"\");\n    \n\n    \n    //CREATE THE QUERY\n    msg.topic = \"DELETE t FROM temperature AS t \"+\n                \"JOIN smartAirConditioner AS sac \"+\n                \"ON t.conditionerID = sac.ID \"+\n                \"WHERE sac.name = '\"+room+\"' \"+\n                \"AND sac.apartmentID = \"+apartmentID+\"; \"+ //temperature deletion\n                \"DELETE h FROM humidity AS h \"+\n                \"JOIN smartAirConditioner AS sac \"+\n                \"ON h.conditionerID = sac.ID \"+\n                \"WHERE sac.name = '\"+room+\"' \"+\n                \"AND sac.apartmentID = \"+apartmentID+\"; \"+ //humidity deletion\n                \"DELETE FROM smartAirConditioner \"+\n                \"WHERE name = '\"+room+\"' \"+\n                \"AND apartmentID = \"+apartmentID; //conditioner deletion\n            \n    \n    node.send([dataMsg, msg]);\n    node.done();\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":660,"wires":[["d14f356dfedfd2c4","bcf9ddd4fb71af46"],["461e5d5a7a1e2c1b"]]},{"id":"461e5d5a7a1e2c1b","type":"mysql","z":"c02edee2ee18141e","mydb":"3d82484f23ccce80","name":"Execute2","x":820,"y":740,"wires":[["d14f356dfedfd2c4"]]},{"id":"d8ae69c2cc4f3d2b","type":"function","z":"c02edee2ee18141e","name":"Ask name","func":"if(msg.complete === undefined){\n    context.set(\"telegramID\", msg.payload.chatId);\n    node.done();\n}\nelse{\n    let rooms = msg.payload.rooms;\n    msg.payload = {\n        content: \"What is the name of the room where is located \"+\n                 \"the conditioner you want to activate/deactivate?\",\n        type : \"message\",\n        chatId: context.get(\"telegramID\")\n    }\n    \n    \n    //Passiamo la lista delle stanze dell'utente come opzioni di\n    //risposta\n    let options = [];\n    for(let i = 0; i< rooms.length; i++){\n        options[i]=rooms[i];\n    }\n    msg.payload.options = options;\n    \n    //change status of FSM\n    global.set(\"\"+msg.payload.chatId, \"toggle_cond1\");\n    \n    \n    node.send(msg);\n    \n    \n    let roomList = roomListAsString(rooms);\n    let msg2 = {\n        payload: {\n            content: roomList,\n            type: \"message\",\n            chatId: msg.payload.chatId\n        }\n    }\n    \n    //Wait for 0.5 seconds\n    await new Promise(r => setTimeout(r, 500));\n    \n    \n    node.send(msg2);\n    node.done();\n}\n\n\n\n\nfunction roomListAsString(rooms){\n    let result = \"Possible answers: \";\n    rooms.forEach(room => {\n        result += room.name+\", \"\n    })\n    return result.substring(0, result.length-1);\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":900,"wires":[["4bae4d8089d127c9"]]},{"id":"9290bed679da292e","type":"function","z":"c02edee2ee18141e","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"toggle_cond1\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":1000,"wires":[["cbd4b9239199753e","08e1219ca8421066"]],"icon":"node-red/switch.svg","l":false},{"id":"c393c14c3ba2a667","type":"switch","z":"c02edee2ee18141e","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":1000,"wires":[[],["9290bed679da292e"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"cbd4b9239199753e","type":"function","z":"c02edee2ee18141e","name":"UPDATE query","func":"if(msg.complete === undefined){\n    context.set(\"telegramID\", msg.payload.chatId);\n    context.set(\"room\", msg.payload.content);\n    node.done();\n}\nelse{\n    let apartmentID = msg.payload[0].ApartmentId;\n    let room = context.get(\"room\");\n    let telegramID = context.get(\"telegramID\");\n    \n    \n    //CREATE THE QUERY\n    msg.payload = {\n        chatId: telegramID\n    }\n    msg.topic = \"UPDATE smartAirConditioner \"+\n                \"SET active = active^1 \"+\n                \"WHERE name = '\"+room+\"' \"+\n                \"AND apartmentID = \"+apartmentID+\"; \"+\n                \"SELECT active FROM smartAirConditioner \"+\n                \"WHERE name = '\"+room+\"' \"+\n                \"AND apartmentID = \"+apartmentID;\n    \n    //RESET THE STATUS OF FSM\n    global.set(\"\"+telegramID, \"\");\n    \n    //Send the query\n    node.send(msg);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":980,"wires":[["5ba344caf3812f0e","8169aa5e7c10a7ab"]]},{"id":"5ba344caf3812f0e","type":"mysql","z":"c02edee2ee18141e","mydb":"3d82484f23ccce80","name":"Execute","x":820,"y":1040,"wires":[["c0c6a175aecf7244"]]},{"id":"7d2a0fbeb44d2363","type":"function","z":"c02edee2ee18141e","name":"Ask name","func":"if(msg.complete === undefined){\n    context.set(\"telegramID\", msg.payload.chatId);\n    node.done();\n}\nelse{\n    let rooms = msg.payload.rooms;\n    msg.payload = {\n        content: \"What is the name of the room where is located \"+\n                 \"the conditioner you want to set?\",\n        type : \"message\",\n        chatId: context.get(\"telegramID\")\n    }\n    \n    \n    //Passiamo la lista delle stanze dell'utente come opzioni di\n    //risposta\n    let options = [];\n    for(let i = 0; i< rooms.length; i++){\n        options[i]=rooms[i];\n    }\n    msg.payload.options = options;\n    \n    //change status of FSM\n    global.set(\"\"+msg.payload.chatId, \"temp_cond1\");\n    \n    \n    node.send(msg);\n    \n    \n    let roomList = roomListAsString(rooms);\n    let msg2 = {\n        payload: {\n            content: roomList,\n            type: \"message\",\n            chatId: msg.payload.chatId\n        }\n    }\n    \n    //Wait for 0.5 seconds\n    await new Promise(r => setTimeout(r, 500));\n    \n    \n    node.send(msg2);\n    \n    node.done();\n}\n\n\n\nfunction roomListAsString(rooms){\n    let result = \"Possible answers: \";\n    rooms.forEach(room => {\n        result += room.name+\", \"\n    })\n    return result.substring(0, result.length-1);\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":1300,"wires":[["29212acfe757c798"]]},{"id":"648c761a6e7c40e0","type":"function","z":"c02edee2ee18141e","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"temp_cond1\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":1400,"wires":[["47a81f01432c45bc"]],"icon":"node-red/switch.svg","l":false},{"id":"40a054eb8b51d18f","type":"switch","z":"c02edee2ee18141e","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":1400,"wires":[[],["648c761a6e7c40e0"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"01ea242a5be2d243","type":"function","z":"c02edee2ee18141e","name":"UPDATE query","func":"if(msg.complete === undefined){\n    context.set(\"telegramID\", msg.payload.chatId);\n    context.set(\"temperature\", msg.payload.content);\n    node.done();\n}\nelse{\n    let telegramID = context.get(\"telegramID\");\n    let apartmentID = msg.payload[0].ApartmentId;\n    let room = flow.get(telegramID+\"_set_cond1\");\n    let temperature = context.get(\"temperature\");\n\n    \n    let fahr = convertToFahrenheit(temperature);\n    //CREATE THE QUERY\n    msg.payload = {\n        chatId: telegramID\n    }\n    msg.topic = \"UPDATE smartAirConditioner \"+\n            \"SET ideal_temperature = \"+fahr+\" \"+\n            \"WHERE name = '\"+room+\"' \"+\n            \"AND apartmentID = \"+apartmentID;\n    \n    //RESET THE STATUS OF FSM and context and flow variables\n    global.set(\"\"+telegramID, \"\");\n    context.set(\"telegramID\", \"\");\n    context.set(\"temperature\", \"\");\n    flow.set(telegramID+\"_set_cond1\", \"\")\n    \n    //Send the query\n    node.send(msg);\n    node.done();\n}\n\n\nfunction convertToFahrenheit(celsius){\n    return (celsius * 1.8) + 32.0;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":1460,"wires":[["86ad373d44f95031","a506f75c99a9718f"]]},{"id":"47a81f01432c45bc","type":"function","z":"c02edee2ee18141e","name":"Ask Temperature","func":"flow.set(msg.payload.chatId+\"_set_cond1\", msg.payload.content);\n\nmsg.payload = {\n    content: \"What is the temperature (in Celsius) that you want to set in this room?\",\n    type : \"message\",\n    chatId: msg.payload.chatId\n}\n\n//change status of FSM\nglobal.set(\"\"+msg.payload.chatId, \"temp_cond2\");\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":1400,"wires":[["29212acfe757c798"]]},{"id":"48b5d39a5d649017","type":"function","z":"c02edee2ee18141e","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"temp_cond2\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":1460,"wires":[["01ea242a5be2d243","a768f226ac025471"]],"icon":"node-red/switch.svg","l":false},{"id":"0acd2b6c4a6c6891","type":"switch","z":"c02edee2ee18141e","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":1460,"wires":[[],["48b5d39a5d649017"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"86ad373d44f95031","type":"mysql","z":"c02edee2ee18141e","mydb":"3d82484f23ccce80","name":"Execute","x":820,"y":1520,"wires":[["83230d256f08edaa"]]},{"id":"b5c78e631047a923","type":"mqtt out","z":"c02edee2ee18141e","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"2","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":670,"y":60,"wires":[]},{"id":"7e6ce5462673cb8e","type":"mqtt in","z":"c02edee2ee18141e","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":120,"wires":[["8e310bb6975a51a7"]]},{"id":"5b9b16ade19256de","type":"mqtt in","z":"c02edee2ee18141e","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":200,"wires":[["bcf338772e757513"]]},{"id":"623dd9a121165867","type":"mqtt out","z":"c02edee2ee18141e","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"2","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":750,"y":520,"wires":[]},{"id":"31fcfedd3131a70f","type":"mqtt in","z":"c02edee2ee18141e","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":660,"wires":[["ee9c1c76bce9920b"]]},{"id":"377967263bfaaf79","type":"mqtt in","z":"c02edee2ee18141e","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":1000,"wires":[["c393c14c3ba2a667"]]},{"id":"4bae4d8089d127c9","type":"mqtt out","z":"c02edee2ee18141e","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"2","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1170,"y":900,"wires":[]},{"id":"385e58a0bf270e0e","type":"mqtt in","z":"c02edee2ee18141e","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":1400,"wires":[["40a054eb8b51d18f"]]},{"id":"62244e6e57f4f36f","type":"mqtt in","z":"c02edee2ee18141e","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":1460,"wires":[["0acd2b6c4a6c6891"]]},{"id":"29212acfe757c798","type":"mqtt out","z":"c02edee2ee18141e","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"2","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1110,"y":1300,"wires":[]},{"id":"4c4194665dafa844","type":"mqtt in","z":"c02edee2ee18141e","name":"Cmd from Master","topic":"cmd/slave/5/1/conditioner/toggle","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":160,"y":900,"wires":[["d8ae69c2cc4f3d2b","130911a4bb8faa00"]]},{"id":"60f352047f85459f","type":"subflow:2d600bbbe6aabcda","z":"c02edee2ee18141e","name":"","x":360,"y":560,"wires":[["a490b863201fe038"]]},{"id":"130911a4bb8faa00","type":"subflow:2d600bbbe6aabcda","z":"c02edee2ee18141e","name":"","x":360,"y":940,"wires":[["d8ae69c2cc4f3d2b"]]},{"id":"cb236188de238146","type":"subflow:2d600bbbe6aabcda","z":"c02edee2ee18141e","name":"","x":360,"y":1340,"wires":[["7d2a0fbeb44d2363"]]},{"id":"02ed1781165198a0","type":"subflow:9dc7a7220c5fc898","z":"c02edee2ee18141e","name":"","x":450,"y":200,"wires":[["0b44d44b05255131","511003c37f42818a","ec99c6365682d768"],["0b44d44b05255131"]]},{"id":"f50a8dc35cecfa2d","type":"subflow:9dc7a7220c5fc898","z":"c02edee2ee18141e","name":"","x":460,"y":700,"wires":[[],["1fd3ea348b9cef4f"]]},{"id":"08e1219ca8421066","type":"subflow:9dc7a7220c5fc898","z":"c02edee2ee18141e","name":"","x":440,"y":1040,"wires":[[],["cbd4b9239199753e"]]},{"id":"a768f226ac025471","type":"subflow:9dc7a7220c5fc898","z":"c02edee2ee18141e","name":"","x":460,"y":1500,"wires":[[],["01ea242a5be2d243"]]},{"id":"be5a1d9d446dd8bd","type":"function","z":"c02edee2ee18141e","name":"Add fake data","func":"\nlet conditionerID = msg.payload[1][0].ID;\n\nmsg.topic = \"INSERT INTO temperature (conditionerID, year, month, \"+\n            \"day, hour, minute, second, recent_temperature, \"+\n            \"recent_humidity, target_temperature) VALUES (\"+\n            conditionerID+\", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\";\nnode.send(msg);\n\nmsg.topic = \"INSERT INTO humidity (conditionerID, year, month, \"+\n            \"day, hour, minute, second, recent_temperature, \"+\n            \"recent_humidity, target_humidity) VALUES (\"+\n            conditionerID+\", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\";\nnode.send(msg);\nnode.done();","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":340,"wires":[["1c687cebb42c5b56"]]},{"id":"1c687cebb42c5b56","type":"mysql","z":"c02edee2ee18141e","mydb":"3d82484f23ccce80","name":"Execute","x":1160,"y":340,"wires":[[]]},{"id":"cc760b3f15ca3e67","type":"change","z":"c02edee2ee18141e","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"},{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":935,"y":280,"wires":[["511003c37f42818a"]],"l":false},{"id":"e0cba6ed0d244590","type":"catch","z":"c02edee2ee18141e","name":"Error 1","scope":["93589f29013917cc"],"uncaught":false,"x":650,"y":120,"wires":[["e0273179f6186b18"]]},{"id":"ec99c6365682d768","type":"function","z":"c02edee2ee18141e","name":"Bad Answer","func":"if(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    msg.payload = {\n        content: \"Error during insertion\",\n        type: \"message\",\n        chatId: context.get('telegramId')\n    }\n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send(msg);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":120,"wires":[["a5fdd837ab76ce33"]]},{"id":"a5fdd837ab76ce33","type":"mqtt out","z":"c02edee2ee18141e","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"2","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1150,"y":160,"wires":[]},{"id":"511003c37f42818a","type":"function","z":"c02edee2ee18141e","name":"Good Answer","func":"if(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    msg.payload = {\n        content: \"New conditioner added\",\n        type: \"message\",\n        chatId: context.get('telegramId')\n    }\n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send(msg);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":920,"y":200,"wires":[["a5fdd837ab76ce33"]]},{"id":"e0273179f6186b18","type":"change","z":"c02edee2ee18141e","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"},{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":745,"y":120,"wires":[["ec99c6365682d768"]],"l":false},{"id":"d14f356dfedfd2c4","type":"function","z":"c02edee2ee18141e","name":"Good answer","func":"//CREATE THE MESSAGE FOR THE USER\n\nif(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    let telegramId = context.get('telegramId')\n    let result = msg.payload[2].affectedRows > 0;\n    if(result){\n        msg.payload = {\n            content: \"Conditioner deleted!\",\n            type: \"message\",\n            chatId: telegramId\n        }\n    }\n    else{\n        msg.payload = {\n            content: \"Conditioner not found!\",\n            type: \"message\",\n            chatId: telegramId\n        }\n    }\n    \n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send(msg);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1010,"y":700,"wires":[["583e3212b2a0c044"]]},{"id":"580fdc40638a1322","type":"catch","z":"c02edee2ee18141e","name":"Error 2","scope":["461e5d5a7a1e2c1b"],"uncaught":false,"x":770,"y":600,"wires":[["9a0a5640304bc483"]]},{"id":"9a0a5640304bc483","type":"change","z":"c02edee2ee18141e","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"},{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":865,"y":600,"wires":[["bcf9ddd4fb71af46"]],"l":false},{"id":"bcf9ddd4fb71af46","type":"function","z":"c02edee2ee18141e","name":"Bad answer","func":"if(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    msg.payload = {\n        content: \"Error during deletion!\",\n        type: \"message\",\n        chatId: context.get('telegramId')\n    }\n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send(msg);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1010,"y":640,"wires":[["583e3212b2a0c044"]]},{"id":"583e3212b2a0c044","type":"mqtt out","z":"c02edee2ee18141e","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"2","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1210,"y":660,"wires":[]},{"id":"4a8abfeaca63f94d","type":"function","z":"c02edee2ee18141e","name":"Answer","func":"//CREATE THE MESSAGE FOR THE USER\n\nif(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    let telegramId = context.get('telegramId')\n    let result = msg.payload[0].changedRows > 0;\n    if(result){\n        let active = msg.payload[1][0].active[0];\n        node.send([null,{payload: active}])\n        if(active){\n            //Condizionatore attivato\n            msg.payload = {\n                content: \"Conditioner activated!\",\n                type: \"message\",\n                chatId: telegramId\n            }\n        }\n        else{\n            //Condizionatore disattivato\n            msg.payload = {\n                content: \"Conditioner deactivated!\",\n                type: \"message\",\n                chatId: telegramId\n            }\n        }\n    }\n    else{\n        //Condizionatore non trovato\n        msg.payload = {\n            content: \"Conditioner not found!\",\n            type: \"message\",\n            chatId: telegramId\n        }\n    }\n    \n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send([msg, msg]);\n    node.done();\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":980,"wires":[["4bae4d8089d127c9"],[]],"outputLabels":["","DEBUG"]},{"id":"c0c6a175aecf7244","type":"change","z":"c02edee2ee18141e","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":915,"y":1040,"wires":[["4a8abfeaca63f94d"]],"l":false},{"id":"8169aa5e7c10a7ab","type":"change","z":"c02edee2ee18141e","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":805,"y":980,"wires":[["4a8abfeaca63f94d"]],"l":false},{"id":"a506f75c99a9718f","type":"change","z":"c02edee2ee18141e","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":795,"y":1460,"wires":[["cc8e0b29dd83b1d7"]],"l":false},{"id":"cc8e0b29dd83b1d7","type":"function","z":"c02edee2ee18141e","name":"Answer","func":"//CREATE THE MESSAGE FOR THE USER\n\nif(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    let telegramId = context.get('telegramId')\n    let jsonObj = JSON.parse(msg.payload);\n    node.send([null, {payload: jsonObj}]);\n    let result = jsonObj.changedRows > 0;\n    if(result){\n        msg.payload = {\n            content: \"Temperature changed!\",\n            type: \"message\",\n            chatId: telegramId\n        }\n    }\n    else{\n        //Condizionatore non trovato\n        msg.payload = {\n            content: \"Conditioner not found!\",\n            type: \"message\",\n            chatId: telegramId\n        }\n    }\n    \n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send([msg, msg]);\n    node.done();\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1040,"y":1460,"wires":[["29212acfe757c798"],[]],"outputLabels":["","DEBUG"]},{"id":"83230d256f08edaa","type":"change","z":"c02edee2ee18141e","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":915,"y":1520,"wires":[["6366b234e625b14f"]],"l":false},{"id":"6366b234e625b14f","type":"json","z":"c02edee2ee18141e","name":"","property":"payload","action":"","pretty":false,"x":990,"y":1520,"wires":[["cc8e0b29dd83b1d7"]]},{"id":"811c27b9ede8f630","type":"tab","label":"Slave - Update","disabled":false,"info":"","env":[]},{"id":"7f6f84620e4123c6","type":"mqtt in","z":"811c27b9ede8f630","name":"Receive command from master","topic":"cmd/slave/5/1/update","qos":"2","datatype":"auto","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":190,"y":240,"wires":[["2210b05d15d90d31"]]},{"id":"4febea6ffd4d8903","type":"mqtt in","z":"811c27b9ede8f630","name":"Receive from boards","topic":"data/esp32/5/1/+/#","qos":"0","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":210,"y":460,"wires":[["96791d854e3c277d"]]},{"id":"e6d3448765104945","type":"mqtt out","z":"811c27b9ede8f630","name":"Send to boards","topic":"","qos":"0","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1020,"y":200,"wires":[]},{"id":"c7983f0dafbe211e","type":"subflow:f2027c49525477b2","z":"811c27b9ede8f630","name":"","x":570,"y":520,"wires":[["9b81c3535a760f07"]]},{"id":"0e05964d0c5e8f0d","type":"inject","z":"811c27b9ede8f630","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":200,"y":600,"wires":[["dbca5c434dee5708"]]},{"id":"dbca5c434dee5708","type":"function","z":"811c27b9ede8f630","name":"Test tensorflow","func":"let msg1 = {\n    topic: \"data/tensor/5/1\",\n    payload: {\n        predictedTemperature: 64.0,\n        predictedHumidity: 47.0\n    }\n}\nreturn msg1;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":600,"wires":[["c7983f0dafbe211e"]]},{"id":"2210b05d15d90d31","type":"subflow:f1dbce9216dad39b","z":"811c27b9ede8f630","name":"","x":470,"y":240,"wires":[["0f1dc040721bdb7b"],["662dd4c65e6b2e1c"]]},{"id":"0f1dc040721bdb7b","type":"function","z":"811c27b9ede8f630","name":"Send commands for each device","func":"let devicesList = msg.payload;\n\ndevicesList.forEach(device => {\n    let apNumber = device.apartment_number;\n    let floor = device.floor;\n    let devID = device.boardNumber;\n    let OMA_temp = 3303;\n    let OMA_hum = 3304;\n    \n    msg.payload = \" \";\n    msg.topic = `cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_temp}/0/5700`;\n    node.send(msg);\n    msg.topic = `cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_hum}/0/5700`;\n    node.send(msg);\n});\nnode.done();","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":760,"y":200,"wires":[["e6d3448765104945"]]},{"id":"b6e17c6237676631","type":"comment","z":"811c27b9ede8f630","name":"Receive command","info":"","x":150,"y":180,"wires":[]},{"id":"22dcc644e4280a52","type":"comment","z":"811c27b9ede8f630","name":"Receive data","info":"","x":130,"y":400,"wires":[]},{"id":"96791d854e3c277d","type":"subflow:78acb5fc6a8d7692","z":"811c27b9ede8f630","name":"","x":770,"y":460,"wires":[["3121c87327c543d7","bd2cf764f10d46b3"]]},{"id":"3121c87327c543d7","type":"subflow:dd07d03db28356b6","z":"811c27b9ede8f630","name":"","x":1130,"y":500,"wires":[]},{"id":"9b81c3535a760f07","type":"subflow:b2cf7646765fc0be","z":"811c27b9ede8f630","name":"","x":850,"y":520,"wires":[["3121c87327c543d7","bd2cf764f10d46b3"]]},{"id":"bd2cf764f10d46b3","type":"subflow:85b15eaca077d021","z":"811c27b9ede8f630","name":"","x":1100,"y":420,"wires":[]},{"id":"662dd4c65e6b2e1c","type":"exec","z":"811c27b9ede8f630","command":"$(pwd)/DockerStartingScript.sh","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"Activate Docker ","x":760,"y":300,"wires":[[],[],["23499b994ad14487","d6ee40e15d03bb88"]]},{"id":"1bdd0f35ca3e640c","type":"debug","z":"811c27b9ede8f630","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":460,"y":420,"wires":[]},{"id":"a9bb4ce23926ce0f","type":"inject","z":"811c27b9ede8f630","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":530,"y":320,"wires":[["662dd4c65e6b2e1c"]]},{"id":"23499b994ad14487","type":"debug","z":"811c27b9ede8f630","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":990,"y":260,"wires":[]},{"id":"a06cabdf30fb1f50","type":"exec","z":"811c27b9ede8f630","command":"python /home/pi/Desktop/test.py","addpay":"","append":"","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"Activate Docker ","x":640,"y":60,"wires":[[],[],["f341f2fd07965a88"]]},{"id":"54c89b0302b79aa6","type":"inject","z":"811c27b9ede8f630","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":460,"y":80,"wires":[["a06cabdf30fb1f50"]]},{"id":"f341f2fd07965a88","type":"debug","z":"811c27b9ede8f630","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":870,"y":80,"wires":[]},{"id":"d6ee40e15d03bb88","type":"switch","z":"811c27b9ede8f630","name":"Is ok?","property":"payload.code","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":950,"y":320,"wires":[["f4aea44428507117"]]},{"id":"44dda683a7fa21ad","type":"file in","z":"811c27b9ede8f630","name":"Read results","filename":"/home/pi/smartBuildingResources/results.json","format":"utf8","chunk":false,"sendError":false,"encoding":"utf8","allProps":false,"x":210,"y":520,"wires":[["16301d7447ce9db7"]]},{"id":"f4aea44428507117","type":"link out","z":"811c27b9ede8f630","name":"TensorFlow end - part 1","mode":"link","links":["31d49157cea7ea1c"],"x":1035,"y":320,"wires":[]},{"id":"31d49157cea7ea1c","type":"link in","z":"811c27b9ede8f630","name":"TensorFlow end -part 2","links":["f4aea44428507117"],"x":75,"y":520,"wires":[["44dda683a7fa21ad"]]},{"id":"16301d7447ce9db7","type":"json","z":"811c27b9ede8f630","name":"","property":"payload","action":"","pretty":false,"x":350,"y":520,"wires":[["c7983f0dafbe211e"]]},{"id":"ebf04cdc70f99aee","type":"tab","label":"Slave - Dead Board","disabled":false,"info":"","env":[]},{"id":"dfd56aededdca044","type":"mqtt in","z":"ebf04cdc70f99aee","name":"LWT from Board","topic":"resp/esp32/5/1/+/3/0/4","qos":"0","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":180,"y":260,"wires":[["79537f69652ae352","82ac084204c7c5dd"]]},{"id":"79537f69652ae352","type":"function","z":"ebf04cdc70f99aee","name":"Split and GET conditioner","func":"let topicParts = msg.topic.split('/');\nlet floor = topicParts[2];\nlet apartment = topicParts[3];\nlet devID = topicParts[4];\n\nlet status = msg.payload.v;\n\n\nlet query = {\n    topic: \"SELECT * FROM smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \"+\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE ap.apartment_number = \"+apartment+\" \"+\n            \"AND ap.floor = \"+floor+\" \"+\n            \"AND sac.boardNumber = \"+devID\n}\n\nif(status === \"Online\"){\n    return [query, null]\n}\nelse {\n    return [null, query]\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":260,"wires":[["3518b5adf3af3728"],["6f502d8c99bf4cc7"]],"outputLabels":["ONLINE","OFFLINE"]},{"id":"6f502d8c99bf4cc7","type":"mysql","z":"ebf04cdc70f99aee","mydb":"3d82484f23ccce80","name":"Query","x":590,"y":300,"wires":[["e24284bb7bff6c91"]]},{"id":"3518b5adf3af3728","type":"mysql","z":"ebf04cdc70f99aee","mydb":"3d82484f23ccce80","name":"Query","x":590,"y":220,"wires":[["3c6d8f1ffd32bf81"]]},{"id":"3c6d8f1ffd32bf81","type":"function","z":"ebf04cdc70f99aee","name":"Set Online","func":"let conditionerID = msg.payload[0].ID;\n\nmsg.topic = \"UPDATE smartAirConditioner \"+\n            \"SET connected = connected^1 \"+\n            \"WHERE ID = \"+conditionerID+\" \"+\n            \"AND connected = 0\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":220,"wires":[["621c978fb0e9972c"]]},{"id":"e24284bb7bff6c91","type":"function","z":"ebf04cdc70f99aee","name":"Set Offline","func":"let conditionerID = msg.payload[0].ID;\n\nmsg.topic = \"UPDATE smartAirConditioner \"+\n            \"SET connected = connected^1 \"+\n            \"WHERE ID = \"+conditionerID+\" \"+\n            \"AND connected = 1\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":300,"wires":[["70d7f8beb663bc10"]]},{"id":"621c978fb0e9972c","type":"mysql","z":"ebf04cdc70f99aee","mydb":"3d82484f23ccce80","name":"Query","x":910,"y":220,"wires":[[]]},{"id":"70d7f8beb663bc10","type":"mysql","z":"ebf04cdc70f99aee","mydb":"3d82484f23ccce80","name":"Query","x":910,"y":300,"wires":[[]]},{"id":"82ac084204c7c5dd","type":"debug","z":"ebf04cdc70f99aee","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":390,"y":160,"wires":[]},{"id":"e73e26d2e870c49f","type":"tab","label":"Slave - Configure TensorFlow","disabled":false,"info":"","env":[]},{"id":"48521059f48a5909","type":"mqtt in","z":"e73e26d2e870c49f","name":"Receive from Master","topic":"cmd/slave/5/1/tensorflow/config","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":160,"y":140,"wires":[["f4831ad4e2e227ba"]]},{"id":"bd16cb2114acec58","type":"debug","z":"e73e26d2e870c49f","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":460,"y":120,"wires":[]},{"id":"dbe00a1a4fec91f3","type":"file","z":"e73e26d2e870c49f","name":"Write","filename":"/home/pi/Desktop/smartBuildingResources/tfconfig.json","appendNewline":true,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":530,"y":200,"wires":[[]]},{"id":"f4831ad4e2e227ba","type":"function","z":"e73e26d2e870c49f","name":"","func":"let message = {\n    payload:  {\n        epochs: parseInt(msg.payload.epochs),\n        neuronsLayer1: parseInt(msg.payload.neuronsLayer1),\n        neuronsLayer2: parseInt(msg.payload.neuronsLayer2),\n        trainingExecution: msg.payload.trainingExecution\n    }\n}\nreturn message;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":200,"wires":[["dbe00a1a4fec91f3","bd16cb2114acec58"]]},{"id":"54d52f8897b8d24f","type":"mqtt-broker","name":"HiveMQ","broker":"broker.hivemq.com","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"3d82484f23ccce80","type":"MySQLdatabase","name":"Amazon MySQL","host":"db-iotsystems.cfbti5otvmx7.us-east-1.rds.amazonaws.com","port":"3306","db":"iot-sys","tz":"","charset":"UTF8"}]
