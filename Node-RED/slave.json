[{"id":"80e09add32fe505c","type":"subflow","name":"Turn on/off conditioners","info":"","category":"","in":[{"x":40,"y":240,"wires":[{"id":"1d7cb2eca479dab2"}]}],"out":[],"env":[],"meta":{},"color":"#A6BBCF","icon":"node-red-node-wol/onoff.png"},{"id":"6bea30dc29261c84","type":"function","z":"80e09add32fe505c","name":"GET data","func":"let ID = msg.payload.conditionerID;\nlet msgId = msg.payload.msgId;\n\nmsg.topic = `SELECT DISTINCT *, '${msgId}' as msgId `+\n            \"FROM smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \"+\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE ID = \"+ ID;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":380,"y":300,"wires":[["b639c4097848d894"]]},{"id":"b639c4097848d894","type":"mysql","z":"80e09add32fe505c","mydb":"3d82484f23ccce80","name":"Query","x":510,"y":300,"wires":[["6420fe057968e96f"]]},{"id":"6420fe057968e96f","type":"change","z":"80e09add32fe505c","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":595,"y":300,"wires":[["01e2a9311092765e"]],"l":false},{"id":"109de57f86f3f58b","type":"change","z":"80e09add32fe505c","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":375,"y":220,"wires":[["01e2a9311092765e"]],"l":false},{"id":"1d7cb2eca479dab2","type":"function","z":"80e09add32fe505c","name":"Assign ID to message","func":"let ID = makeID(16);\n\nlet dataType = msg.payload.dataType;\n\nif(dataType === \"Temperature\"){\n    let message1 = {\n        payload: {\n            dataType: dataType,\n            dataValue: msg.payload.dataValue,\n            msgId: ID\n        }\n    }\n    \n    let message2 = {\n        payload: {\n            conditionerID: msg.payload.conditionerID,\n            msgId: ID\n        }\n    }\n    return [message1, message2];\n}\n\n\n\n\n\nfunction makeID(size) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < size; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":240,"wires":[["109de57f86f3f58b"],["6bea30dc29261c84"]]},{"id":"01e2a9311092765e","type":"function","z":"80e09add32fe505c","name":"Async join","func":"if(msg.complete === undefined){\n    //È arrivato il messaggio con i dati raccolti dai sensori\n    //Get the values\n    \n    let msgId = msg.payload.msgId;\n    node.send([null, msg])\n    //Create or Get the dictionary\n    let dictionary = context.get(\"dictionary\");\n    \n    if(dictionary === undefined)\n        dictionary = {};\n    \n    let dictValue = dictionary[msgId];\n    if(dictValue === undefined){\n        // È il primo messaggio che arriva delle due parti\n        dictionary[msgId] = msg.payload\n        context.set(\"dictionary\", dictionary);\n    }\n    else{\n        // Stranamente è arrivata la query prima di questa parte,\n        // quindi fondiamo i due messaggi e lo inviamo.\n        node.send([null, {payload:\" Strano1\"}])\n        let mesg1 = {\n            payload : {\n                dataType: dataType,\n                dataValue: dataValue,\n                dbData: dictValue\n            }\n        }\n        delete dictionary[msgId];\n        node.send([msg1, msg1]);\n    }\n}\nelse{\n    //È arrivato il messaggio con il risultato della query dal db\n    //Create or Get the dictionary\n    node.send([null, msg])\n    let dictionary = context.get(\"dictionary\");\n    let msgId = msg.payload[0].msgId;\n    if(dictionary === undefined)\n        dictionary = {};\n        \n    let dictValue = dictionary[msgId];\n    if(dictValue === undefined){\n        //Non è ancora arrivato il messaggio con i dati dei sensori\n        dictionary[msgId] = {\n            dbData: msg.payload[0]\n        }\n        context.set(\"dictionary\", dictionary);\n    }\n    else{\n        //Caso normale, la query arriva dopo i dati dei sensori\n        let dataType = dictValue.dataType;\n        let dataValue = dictValue.dataValue;\n        \n        let mesg2 = {\n            payload: {\n                dataType: dataType,\n                dataValue: dataValue,\n                dbData: msg.payload[0]\n            }\n        };\n        delete dictionary[msgId];\n        node.send([mesg2,mesg2]);\n    } \n}\nnode.done();","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":710,"y":220,"wires":[["6d1d9692062954d2","9a93ccea6aa8c9e9"],[]],"outputLabels":["","DEBUG"]},{"id":"6d1d9692062954d2","type":"function","z":"80e09add32fe505c","name":"Analyze and send","func":"let floor = msg.payload.dbData.floor;\nlet devID = msg.payload.dbData.boardNumber;\nlet apNumber = msg.payload.dbData.apartment_number;\n\nlet ideal_temp = msg.payload.dbData.ideal_temperature;\nlet temp = msg.payload.dataValue;\n\n\nlet OMA_actuation = 3306\n\nif(temp - ideal_temp > 3){\n    // The temperature is too high\n    let message = {\n        topic:`cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_actuation}/0/5850`,\n        payload:{\n            v:'on'\n        }\n    }\n    node.send(message);\n}\nelse if(temp -ideal_temp < -3){\n    // The temperature is too low\n    let message = {\n        topic:`cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_actuation}/1/5850`,\n        payload:{\n            v:'on'\n        }\n    }\n    node.send(message);\n}\nelse{\n    //The temperature is ok\n    let message = {\n        topic:`cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_actuation}/0/5850`,\n        payload:{\n            v:'off'\n        }\n    }\n    node.send(message);\n    let message2 = {\n        topic:`cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_actuation}/1/5850`,\n        payload:{\n            v:'off'\n        }\n    }\n    node.send(message2);\n}\n\nnode.done();","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":220,"wires":[["2db8a61d7fa44484","67088a9a0f7fde85"]]},{"id":"2db8a61d7fa44484","type":"mqtt out","z":"80e09add32fe505c","name":"To Boards","topic":"","qos":"0","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1100,"y":220,"wires":[]},{"id":"67088a9a0f7fde85","type":"debug","z":"80e09add32fe505c","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1070,"y":160,"wires":[]},{"id":"9a93ccea6aa8c9e9","type":"debug","z":"80e09add32fe505c","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":870,"y":160,"wires":[]},{"id":"6e1172f184c3524e","type":"subflow","name":"GET inactive conditioners","info":"","category":"","in":[{"x":280,"y":220,"wires":[{"id":"6ddc1db91d8a87c6"}]}],"out":[{"x":980,"y":220,"wires":[{"id":"c8c09d2d78bb29c3","port":0}]}],"env":[],"meta":{},"color":"#F3B567","icon":"node-red/db.svg"},{"id":"6ddc1db91d8a87c6","type":"function","z":"6e1172f184c3524e","name":"GET conditioners","func":"let floor = msg.payload.floor;\nlet apNumber = msg.payload.apNumber;\n\nmsg.topic = \"SELECT * from smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \"+\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE sac.connected = 0\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":220,"wires":[["7d3354a607eb899b"]]},{"id":"7d3354a607eb899b","type":"mysql","z":"6e1172f184c3524e","mydb":"3d82484f23ccce80","name":"Query","x":610,"y":220,"wires":[["fd7c2785970af06b"]]},{"id":"fd7c2785970af06b","type":"change","z":"6e1172f184c3524e","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":705,"y":220,"wires":[["c8c09d2d78bb29c3"]],"l":false},{"id":"c8c09d2d78bb29c3","type":"delay","z":"6e1172f184c3524e","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":830,"y":220,"wires":[[]]},{"id":"a3e070bf665a6c09","type":"subflow","name":"Prepare tensorData for storage","info":"","category":"","in":[{"x":180,"y":260,"wires":[{"id":"20b1b91a5b2381bb"},{"id":"a313b0694a295a15"}]}],"out":[{"x":700,"y":260,"wires":[{"id":"0233f6b52c45b8a0","port":0}]}],"env":[],"meta":{},"color":"#FFCC66","icon":"node-red/parser-json.svg"},{"id":"0233f6b52c45b8a0","type":"function","z":"a3e070bf665a6c09","name":"Convert","func":"if(msg.complete === undefined){\n    context.set(\"tensorData\", msg.payload);\n    node.done();\n}\nelse{\n    let tensorData = context.get(\"tensorData\");\n    let temperature = tensorData.temperature;\n    let humidity = tensorData.humidity;\n    let conditionerID = msg.payload[0].ID;\n    \n    let msg1 = {\n        payload: {\n            dataType: \"Temperature\",\n            dataValue: temperature,\n            conditionerID: conditionerID\n        }\n    };\n    node.send(msg1);\n    \n    let msg2 = {\n        payload: {\n            dataType: \"Humidity\",\n            dataValue: humidity,\n            conditionerID: conditionerID\n        }\n    }\n    node.send(msg2);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":260,"wires":[[]]},{"id":"20b1b91a5b2381bb","type":"change","z":"a3e070bf665a6c09","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":255,"y":260,"wires":[["0233f6b52c45b8a0"]],"l":false},{"id":"1345144a793d68b5","type":"change","z":"a3e070bf665a6c09","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":485,"y":340,"wires":[["0233f6b52c45b8a0"]],"l":false},{"id":"a313b0694a295a15","type":"subflow:6e1172f184c3524e","z":"a3e070bf665a6c09","name":"","x":330,"y":340,"wires":[["1345144a793d68b5"]]},{"id":"e1210922e077085b","type":"subflow","name":"Async Store on DB","info":"","category":"","in":[{"x":40,"y":280,"wires":[{"id":"a6a426659240bae7"}]}],"out":[],"env":[],"meta":{},"color":"#E7E7AE","icon":"node-red-contrib-buffer-array/buffer-array.png"},{"id":"a6a426659240bae7","type":"function","z":"e1210922e077085b","name":"GET last measures","func":"let msgId = makeID(16);\n\nlet dataValue = msg.payload.dataValue;\nlet dataType = msg.payload.dataType;\nlet conditionerID = msg.payload.conditionerID;\n\nlet table = \"humidity\";\nif(dataType === \"temperature\")\n    table = \"temperature\";\nlet query = {\n    payload: \"\",\n    topic: `SELECT *, '${msgId}' AS msgId FROM temperature `+\n            `WHERE conditionerID = ${conditionerID} `+\n            \"ORDER BY year DESC, month DESC, day DESC,\"+\n            \"hour DESC, minute DESC LIMIT 1;\"+\n            `SELECT *, '${msgId}' AS msgId FROM humidity `+\n            `WHERE conditionerID = ${conditionerID} `+\n            \"ORDER BY year DESC, month DESC, day DESC,\"+\n            \"hour DESC, minute DESC LIMIT 1;\"\n}\n\nmsg.payload.msgId = msgId;\nreturn [query, msg];\n\n\n\n\n\n\n\nfunction makeID(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":280,"wires":[["5760190ebd27cf92"],["13b4aacb5c0c62a4"]],"outputLabels":["QUERY","DATA"]},{"id":"13b4aacb5c0c62a4","type":"change","z":"e1210922e077085b","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":355,"y":300,"wires":[["4cdb553cb8b85f6e"]],"l":false},{"id":"5760190ebd27cf92","type":"mysql","z":"e1210922e077085b","mydb":"3d82484f23ccce80","name":"Query","x":390,"y":220,"wires":[["17830ad4d68c3f15"]]},{"id":"17830ad4d68c3f15","type":"delay","z":"e1210922e077085b","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":530,"y":220,"wires":[["ebda74be8bd43541"]]},{"id":"ebda74be8bd43541","type":"change","z":"e1210922e077085b","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":635,"y":220,"wires":[["4cdb553cb8b85f6e"]],"l":false},{"id":"4cdb553cb8b85f6e","type":"function","z":"e1210922e077085b","name":"Async Join","func":"if(msg.complete === undefined){\n\n    // siamo al messaggio proveniente dai sensori\n    let dictionary = context.get(\"dictionary\");\n    if(dictionary === undefined){\n        dictionary = {};\n    }\n    let msgId = msg.payload.msgId;\n    let dictValue = dictionary[msgId];\n    if(dictValue === undefined){\n        // Caso normale\n        dictionary[msgId] = msg.payload;\n        context.set(\"dictionary\", dictionary);\n    }\n    else{\n        // Stranamente è arrivato prima il messaggio dal DB\n        let message = {\n            payload : {\n                dataType: msg.payload.dataType,\n                dataValue: msg.payload.dataValue,\n                lastTempMeasure: dictValue[0][0],\n                lastHumMeasure: dictValue[1][0]\n            }\n        }\n        delete dictionary[msgId];\n        node.send(message);\n    }\n}\nelse{\n    \n    // siamo al messaggio proveniente dal db\n    let dictionary = context.get(\"dictionary\");\n    if(dictionary === undefined){\n        dictionary = {}\n    }\n    let dbMsg = msg.payload;\n    if(dbMsg !== undefined){\n        // Se dbMsg è undefined non c'è modo per noi \n        // di recuperare il msgId. È assurdo che contenga una\n        // stringa vuota, probabilmente c'è stato un errore col DB.\n        // In quel caso non facciamo nulla, quindi gestiamo solo il caso\n        // in cui dbMsg abbia contenuto\n        let msgId = dbMsg[0][0].msgId;\n        let dictValue = dictionary[msgId];\n        \n        if(dictValue === undefined){\n            // Non abbiamo ricevuto i dati precedenti. È strano,\n            // ma non possiamo fare altro che salvare i dati della\n            // query nel dizionario e aspettare che arrivino gli altri\n            // dati.\n            dictionary[msgId] = dbMsg;\n        }\n        else{\n            // Ora abbiamo tutti i dati, possiamo inviare il messaggio\n            let message = {\n                payload: {\n                    dataType: dictValue.dataType,\n                    dataValue: dictValue.dataValue,\n                    lastTempMeasure: dbMsg[0][0],\n                    lastHumMeasure: dbMsg[1][0]\n                }\n            }\n            node.send(message);\n        }\n            \n    }\n}\nnode.done();","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":300,"wires":[["aa5f5fb4f95ee31d"]]},{"id":"89044e485a24c938","type":"mysql","z":"e1210922e077085b","mydb":"3d82484f23ccce80","name":"Execute","x":1080,"y":300,"wires":[[]]},{"id":"aa5f5fb4f95ee31d","type":"function","z":"e1210922e077085b","name":"INSERT","func":"let type = msg.payload.dataType;\nlet value = msg.payload.dataValue;\nlet date = new Date()\n\nlet year = date.getFullYear();\nlet month = date.getMonth()+1;\nlet day = date.getDate();\nlet hour = date.getHours();\nlet minute = date.getMinutes();\nlet second = 0;\n\nlet lastTempMeasure = msg.payload.lastTempMeasure;\nlet lastHumMeasure = msg.payload.lastHumMeasure;\nlet conditionerID = lastTempMeasure.conditionerID;\nif(type === \"Temperature\"){\n    let message = {\n        payload: \"\",\n        topic: \"INSERT INTO temperature (conditionerID, year, month, \"+\n                \"day, hour, minute, second, recent_temperature, \"+\n                \"recent_humidity, target_temperature) VALUES (\"+\n                conditionerID+\", \"+\n                year+\", \"+\n                month+\", \"+\n                day+\", \"+\n                hour+\", \"+\n                minute+\", \"+\n                \"0.0, \"+\n                lastTempMeasure.target_temperature+\", \"+\n                lastHumMeasure.target_humidity+\", \"+\n                value+\")\"\n    }\n    return message;\n}\nelse if (type === \"Humidity\"){\n    let message = {\n        payload: \"\",\n        topic: \"INSERT INTO humidity (conditionerID, year, month, \"+\n                \"day, hour, minute, second, recent_temperature, \"+\n                \"recent_humidity, target_humidity) VALUES (\"+\n                conditionerID+\", \"+\n                year+\", \"+\n                month+\", \"+\n                day+\", \"+\n                hour+\", \"+\n                minute+\", \"+\n                \"0.0, \"+\n                lastTempMeasure.target_temperature+\", \"+\n                lastHumMeasure.target_humidity+\", \"+\n                value+\")\"\n    }\n    return message;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":300,"wires":[["89044e485a24c938","9ea9fb0468dbf0c0"]]},{"id":"9ea9fb0468dbf0c0","type":"debug","z":"e1210922e077085b","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1030,"y":240,"wires":[]},{"id":"a00bc77e22dc15e9","type":"subflow","name":"GET conditionerID","info":"","category":"","in":[{"x":240,"y":300,"wires":[{"id":"61566af2edca0ca8"}]}],"out":[{"x":940,"y":300,"wires":[{"id":"4fe05e3276dcd1f8","port":0}]}],"env":[],"meta":{},"color":"#F3B567","icon":"node-red/db.svg"},{"id":"61566af2edca0ca8","type":"function","z":"a00bc77e22dc15e9","name":"GET conditionerID","func":"let devID = msg.payload.device;\nlet floor = msg.payload.floor;\nlet apartment = msg.payload.apartment;\nlet messageId = msg.payload.messageId;\n\nmsg.topic = `SELECT sac.ID, '${messageId}' AS messageId `+\n            \"FROM smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \"+\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE sac.boardNumber = \"+devID+\" \"+\n            \"AND ap.apartment_number = \"+apartment+\" \"+\n            \"AND ap.floor = \"+floor;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":300,"wires":[["3303905386cd3610"]]},{"id":"3303905386cd3610","type":"mysql","z":"a00bc77e22dc15e9","mydb":"3d82484f23ccce80","name":"Query","x":570,"y":300,"wires":[["cfb9e1ed98dacbfb"]]},{"id":"cfb9e1ed98dacbfb","type":"change","z":"a00bc77e22dc15e9","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":685,"y":300,"wires":[["4fe05e3276dcd1f8"]],"l":false},{"id":"4fe05e3276dcd1f8","type":"delay","z":"a00bc77e22dc15e9","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":810,"y":300,"wires":[[]]},{"id":"0ce11c1de156a737","type":"subflow","name":"Async Input Management","info":"","category":"","in":[{"x":60,"y":240,"wires":[{"id":"485354569ed1546b"},{"id":"2b40c5b05074bdee"}]}],"out":[{"x":1020,"y":260,"wires":[{"id":"70d3b57d98161554","port":0}]}],"env":[],"meta":{},"color":"#D7D7A0","icon":"node-red-contrib-buffer-array/buffer-array.png"},{"id":"485354569ed1546b","type":"function","z":"0ce11c1de156a737","name":"Format data","func":"let topic = msg.topic;\nlet topicLevels = topic.split('/');\nlet floor = topicLevels[2];\nlet apartment = topicLevels[3];\nlet device = topicLevels[4];\nlet dataType = topicLevels[5];\nlet dataValue\n\nlet messageId = makeID(16);\n\nswitch(topicLevels[5]){\n    case \"3303\": \n        dataType = \"Temperature\"; \n        dataValue = convertToFahrenheit(msg.payload.v)\n        break;\n    case \"3304\":\n        dataType = \"Humidity\"; \n        dataValue = msg.payload.v;\n        break;\n    default: dataType = \"Unknown\"; break;\n}\n\nlet msg1 = {\n    payload: {\n        floor: floor,\n        apartment: apartment,\n        device: device,\n        messageId: messageId\n    }\n}\n\n\nlet msg2 = {\n    payload : {\n        dataType: dataType,\n        dataValue: dataValue,\n        messageId: messageId\n    }\n}\nreturn [msg1,msg2];\n\n\nfunction makeID(size) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < size; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\n\nfunction convertToFahrenheit(celsiusValue){\n    return (celsiusValue * 1.8) + 32.0;\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":240,"wires":[["b9ef80e9e8151268"],["1c78839808bfb56d"]],"outputLabels":["APARTMENT DATA","SENSOR DATA"]},{"id":"b9ef80e9e8151268","type":"subflow:a00bc77e22dc15e9","z":"0ce11c1de156a737","name":"","x":570,"y":200,"wires":[["70d3b57d98161554"]]},{"id":"1c78839808bfb56d","type":"change","z":"0ce11c1de156a737","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":495,"y":260,"wires":[["70d3b57d98161554"]],"l":false},{"id":"70d3b57d98161554","type":"function","z":"0ce11c1de156a737","name":"Async Join","func":"if(msg.complete === undefined){\n    //È arrivato il messaggio con i dati raccolti dai sensori\n    //Get the values\n    \n    let msgId = msg.payload.messageId;\n    \n    //Create or Get the dictionary\n    let dictionary = context.get(\"dictionary\");\n    \n    if(dictionary === undefined)\n        dictionary = {};\n    \n    let dictValue = dictionary[msgId];\n    if(dictValue === undefined){\n        // È il primo messaggio che arriva delle due parti\n        node.send([null, {payload: \"Primo messaggio\"}])\n        let dataType = msg.payload.dataType;\n        let dataValue = msg.payload.dataValue;\n        \n        dictionary[msgId] = {\n            dataType: dataType,\n            dataValue: dataValue\n        };\n        node.send([null, {payload:dictionary}]);\n        context.set(\"dictionary\", dictionary);\n    }\n    else{\n        // Stranamente è arrivata la query prima di questa parte,\n        // quindi fondiamo i due messaggi e lo inviamo.\n        node.send([null, {payload:\" Strano1\"}])\n        let conditionerID = dictValue.conditionerID;\n        let mesg1 = {\n            payload : {\n                dataType: dataType,\n                dataValue: dataValue,\n                conditionerID: conditionerID\n            }\n            \n        }\n        \n        delete dictionary[msgId];\n        \n        node.send([msg1, msg1]);\n    }\n}\nelse{\n    node.send([null, {payload: \"OK 2\"}]);\n    //È arrivato il messaggio con il risultato della query dal db\n    let conditionerID = msg.payload[0].ID;\n    //Create or Get the dictionary\n    let dictionary = context.get(\"dictionary\");\n    let msgId = msg.payload[0].messageId;\n    if(dictionary === undefined)\n        dictionary = {};\n        \n    let dictValue = dictionary[msgId];\n    if(dictValue === undefined){\n        //Non è ancora arrivato il messaggio con i dati dei sensori\n        dictionary[msgId] = {\n            conditionerID: conditionerID\n        }\n        context.set(\"dictionary\", dictionary);\n    }\n    else{\n        //Caso normale, la query arriva dopo i dati dei sensori\n        let dataType = dictValue.dataType;\n        let dataValue = dictValue.dataValue;\n        \n        let mesg2 = {\n            payload: {\n                dataType: dataType,\n                dataValue: dataValue,\n                conditionerID: conditionerID\n            }\n        };\n        \n        delete dictionary[msgId];\n        node.send([mesg2,mesg2]);\n    } \n}\nnode.done();","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":260,"wires":[[],[]],"outputLabels":["RESULT","DEBUG"]},{"id":"2b40c5b05074bdee","type":"debug","z":"0ce11c1de156a737","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":190,"y":200,"wires":[]},{"id":"f3610238122f600b","type":"subflow","name":"List and Split Conditioners","info":"","category":"","in":[{"x":160,"y":260,"wires":[{"id":"4cbd4f69257acfaa"},{"id":"ee396fd1b09a51b8"}]}],"out":[{"x":680,"y":200,"wires":[{"id":"d0095282a5dd4870","port":0}]},{"x":700,"y":300,"wires":[{"id":"b699b6e74009fda7","port":0}]}],"env":[],"meta":{},"color":"#AAAA66","outputLabels":["DEVICES","TENSORFLOW"],"icon":"font-awesome/fa-list-ol"},{"id":"4cbd4f69257acfaa","type":"function","z":"f3610238122f600b","name":"Get Conditioners","func":"let topicParts = msg.topic.split('/');\n\nlet floor = topicParts[2];\nlet apNumber = topicParts[3];\n\n\nlet msg1 ={\n    topic : \"SELECT DISTINCT * FROM smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \" +\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE ap.floor = \"+floor+\" \"+\n            \"AND ap.apartment_number = \"+apNumber+\" \"+\n            \"AND sac.active = 1 \"+\n            \"AND sac.connected = 1\"\n    \n}\n\nlet msg2 ={\n    topic : \"SELECT DISTINCT * FROM smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \" +\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE ap.floor = \"+floor+\" \"+\n            \"AND ap.apartment_number = \"+apNumber+\" \"+\n            \"AND sac.active = 1 \"+\n            \"AND sac.connected = 0\"\n    \n}\nreturn [msg1,msg2];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":260,"wires":[["d0095282a5dd4870"],["b699b6e74009fda7"]]},{"id":"adb33019509d32f0","type":"comment","z":"f3610238122f600b","name":"DOC","info":"In this subflow we obtain the list of smartAirConditioners of the user, understanding if there is also someone disconnected","x":210,"y":100,"wires":[]},{"id":"d0095282a5dd4870","type":"mysql","z":"f3610238122f600b","mydb":"3d82484f23ccce80","name":"Query","x":490,"y":200,"wires":[[]]},{"id":"48c8d8c4f52834ce","type":"function","z":"f3610238122f600b","name":"Split Conditioners","func":"let connectedConditioners = [];\nlet disconnectedConditioners = [];\n\nmsg.payload.forEach(conditioner => {\n   if(conditioner.connected){\n       //CONNECTED\n       connectedConditioners.push(conditioner);\n   }\n   else{\n       //DISCONNECTED\n       disconnectedConditioners.push(conditioner);\n   }\n});\n\nlet msg1 = {\n    payload: connectedConditioners\n}\n\nlet msg2 = {\n    payload: disconnectedConditioners\n}\nreturn [msg1, msg2];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":670,"y":400,"wires":[[],[]],"outputLabels":["CONNECTED LIST","DISCONNECTED LIST"]},{"id":"b699b6e74009fda7","type":"mysql","z":"f3610238122f600b","mydb":"3d82484f23ccce80","name":"Query","x":490,"y":300,"wires":[[]]},{"id":"ee396fd1b09a51b8","type":"debug","z":"f3610238122f600b","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":270,"y":200,"wires":[]},{"id":"52594df0649dc8a8","type":"subflow","name":"Compare prevision & weather","info":"","category":"","in":[{"x":60,"y":280,"wires":[{"id":"4132a4260883459f"},{"id":"6fbd5aeeafb41821"}]}],"out":[{"x":1240,"y":280,"wires":[{"id":"19838d8740b00a74","port":0},{"id":"153abd400baff6c8","port":0}]}],"env":[],"meta":{},"color":"#34D2FF","outputLabels":["VALUES","APARTMENT"],"icon":"font-awesome/fa-sun-o"},{"id":"4132a4260883459f","type":"function","z":"52594df0649dc8a8","name":"Get Location","func":"let topic = msg.topic;\nlet topicParts = topic.split('/');\n\nlet floor = topicParts[2];\nlet apartment = topicParts[3];\n\n//Now we create the query\nmsg.topic = \"SELECT * \" +\n            \"FROM apartment \"+\n            \"WHERE floor = \"+floor+\" \"+\n            \"AND apartment_number = \"+apartment;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":130,"y":440,"wires":[["c5d50c8fd486830e"]]},{"id":"c5d50c8fd486830e","type":"mysql","z":"52594df0649dc8a8","mydb":"3d82484f23ccce80","name":"Query","x":270,"y":440,"wires":[["4415d84daca629e5"]]},{"id":"4415d84daca629e5","type":"function","z":"52594df0649dc8a8","name":"Create web query","func":"let openWeatherApiKey = \"be38a76c3fbd03f63957ba455cfa6314\";\n\nif(msg.payload[0].length === 0){\n    /* La query non ha restituito nulla.\n     * Non sappiamo la località nè tantomeno la qualità dell'edificio,\n     * quindi processiamo il valore di tensorFlow così com'è arrivato\n     */\n    abortAverage();\n}\n\nelse{\n    /*\n     * La query ha restituito dei valori, però devono essere tutti e \n     * 3 valorizzati, altrimenti l'algoritmo non può funzionare\n     */\n    let latitude = msg.payload[0].latitude;\n    let longitude = msg.payload[0].longitude;\n    //let latitude = 38.907983;\n    //let longitude = 16.578234;\n    let quality = msg.payload[0].building_quality;\n    \n    if(latitude === undefined\n       || longitude === undefined\n       || quality === undefined){\n           abortAverage();\n    }\n\n    let msg1 = {\n        payload: quality,\n        complete: true\n    }\n    let URL = \"https://api.openweathermap.org/data/2.5/weather\";\n    URL += \"?lat=\"+latitude;\n    URL += \"&lon=\"+longitude;\n    URL += \"&units=imperial\";\n    URL += \"&appid=\"+openWeatherApiKey;\n    let msg2 = {\n        url: URL\n    };\n    return [msg1, msg2];\n}\n\n\nfunction abortAverage(){\n    let msg1 = {\n        payload: 0,\n        complete: true\n    }\n    return [msg1, null];\n}\n\n\n","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":360,"wires":[["6fbd5aeeafb41821"],["faef88ea6a3a1046"],[]],"outputLabels":["Quality","OpenWeatherMap Query","DEBUG"]},{"id":"faef88ea6a3a1046","type":"http request","z":"52594df0649dc8a8","name":"OpenWeatherMap API","method":"GET","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":560,"y":440,"wires":[["ebfd1643ddc0a538"]]},{"id":"ebfd1643ddc0a538","type":"json","z":"52594df0649dc8a8","name":"","property":"payload","action":"","pretty":false,"x":730,"y":440,"wires":[["36bc3820ddaad303"]]},{"id":"19838d8740b00a74","type":"function","z":"52594df0649dc8a8","name":"Average","func":"if(msg.complete === undefined){\n\n    context.set(\"tensorData\", msg.payload)\n    node.done();\n}\n\nelse{\n    let tensorData = context.get(\"tensorData\");\n    let predictedHumidity = tensorData.predictedHumidity;\n    let predictedTemp = tensorData.predictedTemperature;\n    let quality = tensorData.quality;\n    node.send([null, null, {payload: tensorData}])\n    let floor = tensorData.floor;\n    let apartment = tensorData.apartment;\n    let actualTemp = msg.payload.actualTemperature;\n    let actualHum = msg.payload.actualHumidity;\n    \n        \n    let avgTemp;\n    let avgHum;\n    \n    switch(quality){\n        case 1: avgTemp= predictedTemp*0.1 + actualTemp*0.9; break;\n        case 2: avgTemp= predictedTemp*0.3 + actualTemp*0.7; break;\n        case 3: avgTemp= predictedTemp*0.5 + actualTemp*0.5; break;\n        case 4: avgTemp= predictedTemp*0.7 + actualTemp*0.3; break;\n        case 5: avgTemp= predictedTemp*0.9 + actualTemp*0.1; break;\n        default: avgTemp = predictedTemp;\n    }\n    \n    switch(quality){\n        case 1: avgHum= predictedHumidity*0.1 + actualHum*0.9; break;\n        case 2: avgHum= predictedHumidity*0.3 + actualHum*0.7; break;\n        case 3: avgHum= predictedHumidity*0.5 + actualHum*0.5; break;\n        case 4: avgHum= predictedHumidity*0.7 + actualHum*0.3; break;\n        case 5: avgHum= predictedHumidity*0.9 + actualHum*0.1; break;\n        default: avgHum = predictedHumidity;\n    }\n    \n    msg.payload = {\n        temperature: avgTemp,\n        humidity: avgHum,\n        floor: floor,\n        apartment: apartment\n    }\n    let msg2 = {\n        payload: {\n            floor: floor,\n            apartment: apartment\n        }\n    }\n    return [msg, msg2, null];\n}\n\n","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":380,"wires":[[],[],[]],"outputLabels":["","","DEBUG"]},{"id":"6fbd5aeeafb41821","type":"function","z":"52594df0649dc8a8","name":"Join quality & Tensorflow Data","func":"if(msg.complete===undefined){\n    context.set(\"tensorData\", msg.payload);\n    context.set(\"topic\",msg.topic);\n    node.done();\n}\nelse{\n    let tensorData = context.get(\"tensorData\");\n    let topic = context.get(\"topic\");\n    context.set(\"tensorData\", '');\n    context.set(\"topic\", '');\n    \n    let topicParts = topic.split(\"/\");\n    let predictedTemperature = tensorData.predictedTemperature;\n    let predictedHumidity = tensorData.predictedHumidity;\n    let quality = msg.payload;\n    \n    if(quality == 0){\n        /* Non abbiamo dati per andare avanti con la media\n         * quindi restituiamo direttamente i valori di tensorFlow\n         */\n        let msg = {\n            payload: {\n                predictedHumidity: predictedHumidity,\n                predictedTemperature: predictedTemperature,\n                floor: topicParts[2],\n                apartment: topicParts[3]\n            }\n            \n        }\n        node.send([msg, null]);\n    }\n    else{\n        /*\n         * Possiamo procedere con il calcolo dell'average\n         */\n        let msg = {\n            payload: {\n                predictedHumidity: predictedHumidity,\n                predictedTemperature: predictedTemperature,\n                quality: quality,\n                floor: topicParts[2],\n                apartment: topicParts[3]\n            },\n            complete : undefined\n        };\n        node.send([null, msg]);\n    }\n    node.done();\n    \n    \n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":280,"wires":[["153abd400baff6c8"],["19838d8740b00a74"]],"outputLabels":["ABORTED","AVERAGE"]},{"id":"36bc3820ddaad303","type":"function","z":"52594df0649dc8a8","name":"Filter","func":"let actualHum = msg.payload.main.humidity;\nlet actualTemp = msg.payload.main.temp;\n\nmsg = {\n    payload: {\n        actualTemperature: actualTemp,\n        actualHumidity: actualHum\n    },\n    complete: true\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":850,"y":440,"wires":[["19838d8740b00a74"]]},{"id":"153abd400baff6c8","type":"function","z":"52594df0649dc8a8","name":"Split","func":"let msg1 = {\n    payload: {\n        predictedTemperature: msg.payload.predictedTemperature,\n        predictedHumidity: msg.payload.predictedHumidity\n    }\n};\n\nlet msg2 = {\n    payload: {\n        floor: msg.payload.floor,\n        apartment: msg.payload.apartment\n    }\n}\nreturn [msg1, msg2];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":280,"wires":[[],[]],"outputLabels":["Values","Apartment"],"icon":"node-red/split.svg"},{"id":"ec789f253aa282ed","type":"subflow","name":"GET apartmentID","info":"","category":"","in":[{"x":80,"y":160,"wires":[{"id":"c28367a5f02c92b5"}]}],"out":[{"x":700,"y":160,"wires":[{"id":"c28367a5f02c92b5","port":0}]},{"x":690,"y":220,"wires":[{"id":"61cb396351560177","port":0}]}],"env":[],"meta":{},"color":"#F3B567","outputLabels":["ORIGINAL MESSAGE","QUERY RESULT"],"icon":"node-red/db.svg"},{"id":"c28367a5f02c92b5","type":"function","z":"ec789f253aa282ed","name":"GET apartmentID","func":"flow.set(msg.payload.chatId+\"_new_cond2\", msg.payload.content)\n\nmsg.topic= \"SELECT ApartmentId \"+\n           \"FROM user \"+\n           \"WHERE chatId='\"+msg.payload.chatId+\"'\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":250,"y":160,"wires":[["3465f5f6e9599755"]]},{"id":"3465f5f6e9599755","type":"mysql","z":"ec789f253aa282ed","mydb":"3d82484f23ccce80","name":"Query","x":430,"y":220,"wires":[["61cb396351560177"]]},{"id":"61cb396351560177","type":"change","z":"ec789f253aa282ed","name":"","rules":[{"t":"set","p":"payload.rooms","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":525,"y":220,"wires":[[]],"l":false},{"id":"0c1959461b0dcd93","type":"subflow","name":"GET user rooms","info":"","category":"","in":[{"x":140,"y":200,"wires":[{"id":"3b356ee758942011"}]}],"out":[{"x":620,"y":200,"wires":[{"id":"2d1eed1ebd6c6863","port":0}]}],"env":[],"meta":{},"color":"#F3B567","icon":"node-red/db.svg"},{"id":"3b356ee758942011","type":"function","z":"0c1959461b0dcd93","name":"GET user rooms","func":"msg.topic = \"SELECT DISTINCT sac.name \"+\n            \"FROM smartAirConditioner AS sac, user AS u \"\n            \"WHERE u.chatId = \"+msg.uid+\" \"+\n            \"AND u.apartmentID = sac.apartmentID\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":280,"y":200,"wires":[["37660723c98065b0"]]},{"id":"37660723c98065b0","type":"mysql","z":"0c1959461b0dcd93","mydb":"3d82484f23ccce80","name":"Query","x":450,"y":200,"wires":[["2d1eed1ebd6c6863"]]},{"id":"2d1eed1ebd6c6863","type":"change","z":"0c1959461b0dcd93","name":"","rules":[{"t":"set","p":"payload.rooms","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":545,"y":200,"wires":[[]],"l":false},{"id":"cea01f70f2417588","type":"tab","label":"Slave - Handle Conditioner","disabled":true,"info":"","env":[]},{"id":"3e591acd80bdf153","type":"comment","z":"cea01f70f2417588","name":"Add a new conditioner","info":"","x":200,"y":20,"wires":[]},{"id":"28387933d9451715","type":"comment","z":"cea01f70f2417588","name":"Remove an existing conditioner","info":"","x":290,"y":480,"wires":[]},{"id":"700dfbf6065ba515","type":"comment","z":"cea01f70f2417588","name":"Activate/Deactivate an existing conditioner","info":"","x":320,"y":860,"wires":[]},{"id":"7c9f8c61796d0e65","type":"function","z":"cea01f70f2417588","name":"Ask name","func":"msg.payload = {\n    content: \"What is the name of the room?\",\n    type : \"message\",\n    chatId: msg.payload.chatId\n}\n//change status of FSM\nglobal.set(\"\"+msg.payload.chatId, \"new_cond1\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":60,"wires":[["c6d010135ff81c8c"]]},{"id":"998ab5999635908c","type":"function","z":"cea01f70f2417588","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"new_cond1\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":120,"wires":[["3df626b8eb00a22b"]],"icon":"node-red/switch.svg","l":false},{"id":"4e5745f9c630e5cb","type":"switch","z":"cea01f70f2417588","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":120,"wires":[[],["998ab5999635908c"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"3df626b8eb00a22b","type":"function","z":"cea01f70f2417588","name":"Ask DeviceID","func":"//change status of FSM\nglobal.set(\"\"+msg.payload.chatId, \"new_cond2\");\n\nflow.set(msg.payload.chatId+\"_new_cond1\", msg.payload.content);\n\nmsg.payload = {\n    content: \"Set the device ID\",\n    type : \"message\",\n    chatId: msg.payload.chatId\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":120,"wires":[["c6d010135ff81c8c"]]},{"id":"61396d44398f852b","type":"function","z":"cea01f70f2417588","name":"INSERT Conditioner","func":"if(msg.complete===undefined){\n    context.set(\"chatId\", msg.payload.chatId);\n    context.set(msg.payload.chatId+\"_new_cond2\", msg.payload.content)\n    node.done();\n}\nelse{\n    \n    let chatId = context.get(\"chatId\");\n    let roomName = flow.get(chatId+\"_new_cond1\");\n    let deviceID = context.get(chatId+\"_new_cond2\");\n    let apartmentID = msg.payload[0].ApartmentId;\n    \n    /*\n    let message = {\n        payload: \"\",\n        complete: true\n    };*/\n    \n    msg.topic = \"INSERT INTO smartAirConditioner (apartmentID,\"+\n                \"boardNumber, name, active, \"+\n                \"connected, ideal_temperature) \"+\n                \"VALUES(\"+apartmentID+\" , \"+ // apartmentID\n                deviceID+\" , '\"+ // deviceID\n                roomName+\"' , \"+ //roomName\n                1 +\" , \"+ //Active Flag\n                0 +\" , \"+ //connected\n                22+\");\"+ // Ideal Temperature\n                \"SELECT * FROM smartAirConditioner \"+\n                \"WHERE apartmentID = \"+apartmentID+\" \"+\n                \"AND boardNumber = \"+deviceID;\n    \n     \n    //reset status of FSM and of context\n    global.set(\"\"+chatId, \"\");\n    context.set(\"chatId\",\"\");\n    flow.set(chatId+\"_new_cond1\", \"\");\n    context.set(chatId+\"_new_cond2\", \"\");\n    \n    node.send(msg);\n    node.done();\n}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":300,"wires":[["ce7a4f78da6c6e4e"]]},{"id":"38da8dd54ce569ad","type":"comment","z":"cea01f70f2417588","name":"Set ideal temperature","info":"","x":260,"y":1260,"wires":[]},{"id":"459d16361d3c4cc2","type":"mqtt in","z":"cea01f70f2417588","name":"Cmd from Master","topic":"cmd/slave/5/1/conditioner/add","qos":"0","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":160,"y":60,"wires":[["7c9f8c61796d0e65"]]},{"id":"0633a712bfec0c22","type":"mqtt in","z":"cea01f70f2417588","name":"Cmd from Master","topic":"cmd/slave/5/1/conditioner/remove","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":160,"y":520,"wires":[["abf2bd9e53ddda9a","95aeb4d123040f42"]]},{"id":"d7300d6646f352c8","type":"mqtt in","z":"cea01f70f2417588","name":"Cmd from Master","topic":"cmd/slave/5/1/conditioner/set","qos":"0","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":160,"y":1300,"wires":[["7c5ee3b7b1f4244c","a98e360cde2891f0"]]},{"id":"1405ca8b1d2812c4","type":"function","z":"cea01f70f2417588","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"new_cond2\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":200,"wires":[["4b190dd38180fddf"]],"icon":"node-red/switch.svg","l":false},{"id":"b7840b77cfe461e7","type":"switch","z":"cea01f70f2417588","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":200,"wires":[[],["1405ca8b1d2812c4"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"ce7a4f78da6c6e4e","type":"mysql","z":"cea01f70f2417588","mydb":"3d82484f23ccce80","name":"Execute1","x":840,"y":300,"wires":[["952106de325d81a1","24195c9a325a0e2a"]]},{"id":"abf2bd9e53ddda9a","type":"function","z":"cea01f70f2417588","name":"Ask name","func":"if(msg.complete === undefined){\n    context.set(\"telegramID\", msg.payload.chatId);\n    node.done();\n}\nelse{\n    let rooms = msg.payload.rooms;\n    msg.payload = {\n        content: \"What is the name of the room where is located \"+\n                 \"the conditioner you want to delete?\",\n        type : \"message\",\n        chatId: context.get(\"telegramID\")\n    }\n    \n    //Passiamo la lista delle stanze dell'utente come opzioni di\n    //risposta\n    let options = [];\n    for(let i = 0; i< rooms.length; i++){\n        options[i]=rooms[i].name;\n    }\n    msg.payload.options = options;\n    \n    //change status of FSM\n    global.set(\"\"+msg.payload.chatId, \"del_cond1\");\n    node.send(msg);\n    \n    let roomList = roomListAsString(rooms);\n    let msg2 = {\n        payload: {\n            content: roomList,\n            type: \"message\",\n            chatId: msg.payload.chatId\n        }\n    }\n    \n    //Wait for 0.5 seconds\n    await new Promise(r => setTimeout(r, 500));\n    \n    \n    node.send(msg2);\n    node.done();\n}\n\n\nfunction roomListAsString(rooms){\n    let result = \"Possible answers: \";\n    rooms.forEach(room => {\n        result += room.name+\", \"\n    })\n    return result.substring(0, result.length-1);\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":520,"wires":[["39eb8b4c865d4fb5"]]},{"id":"4718bcdff07b8908","type":"function","z":"cea01f70f2417588","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"del_cond1\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":660,"wires":[["9979d779391db26c","b0eecd9354aaaf66"]],"icon":"node-red/switch.svg","l":false},{"id":"f5e8e09ffc4c489e","type":"switch","z":"cea01f70f2417588","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":660,"wires":[[],["4718bcdff07b8908"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"b0eecd9354aaaf66","type":"function","z":"cea01f70f2417588","name":"DELETE query","func":"if(msg.complete === undefined){\n    context.set(\"room\", msg.payload.content.trim());\n    context.set(\"chatId\", msg.payload.chatId);\n    node.done();\n}\nelse{\n    \n    let telegramId = context.get(\"chatId\");\n    let apartmentID = msg.payload[0].ApartmentId;\n    let room = context.get(\"room\");\n    \n    //let debugMsg = {\n    //    payload:telegramId\n    //}\n    //node.send([null, null, debugMsg]);\n    \n    let dataMsg = {\n        payload: {\n            chatId: telegramId\n        }\n    }\n    \n    //Reset status of FSM and context variables\n    global.set(\"\"+telegramId, \"\");\n    context.set(\"chatId\",\"\");\n    context.set(\"room\",\"\");\n    \n\n    \n    //CREATE THE QUERY\n    msg.topic = \"DELETE t FROM temperature AS t \"+\n                \"JOIN smartAirConditioner AS sac \"+\n                \"ON t.conditionerID = sac.ID \"+\n                \"WHERE sac.name = '\"+room+\"' \"+\n                \"AND sac.apartmentID = \"+apartmentID+\"; \"+ //temperature deletion\n                \"DELETE h FROM humidity AS h \"+\n                \"JOIN smartAirConditioner AS sac \"+\n                \"ON h.conditionerID = sac.ID \"+\n                \"WHERE sac.name = '\"+room+\"' \"+\n                \"AND sac.apartmentID = \"+apartmentID+\"; \"+ //humidity deletion\n                \"DELETE FROM smartAirConditioner \"+\n                \"WHERE name = '\"+room+\"' \"+\n                \"AND apartmentID = \"+apartmentID; //conditioner deletion\n            \n    \n    node.send([dataMsg, msg]);\n    node.done();\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":660,"wires":[["ac85fd8a132d1250","38582f7c9135915f"],["3f5be79cc67d8f40"]]},{"id":"3f5be79cc67d8f40","type":"mysql","z":"cea01f70f2417588","mydb":"3d82484f23ccce80","name":"Execute2","x":820,"y":740,"wires":[["ac85fd8a132d1250"]]},{"id":"52d81acab5228491","type":"function","z":"cea01f70f2417588","name":"Ask name","func":"if(msg.complete === undefined){\n    context.set(\"telegramID\", msg.payload.chatId);\n    node.done();\n}\nelse{\n    let rooms = msg.payload.rooms;\n    msg.payload = {\n        content: \"What is the name of the room where is located \"+\n                 \"the conditioner you want to activate/deactivate?\",\n        type : \"message\",\n        chatId: context.get(\"telegramID\")\n    }\n    \n    \n    //Passiamo la lista delle stanze dell'utente come opzioni di\n    //risposta\n    let options = [];\n    for(let i = 0; i< rooms.length; i++){\n        options[i]=rooms[i];\n    }\n    msg.payload.options = options;\n    \n    //change status of FSM\n    global.set(\"\"+msg.payload.chatId, \"toggle_cond1\");\n    \n    \n    node.send(msg);\n    \n    \n    let roomList = roomListAsString(rooms);\n    let msg2 = {\n        payload: {\n            content: roomList,\n            type: \"message\",\n            chatId: msg.payload.chatId\n        }\n    }\n    \n    //Wait for 0.5 seconds\n    await new Promise(r => setTimeout(r, 500));\n    \n    \n    node.send(msg2);\n    node.done();\n}\n\n\n\n\nfunction roomListAsString(rooms){\n    let result = \"Possible answers: \";\n    rooms.forEach(room => {\n        result += room.name+\", \"\n    })\n    return result.substring(0, result.length-1);\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":900,"wires":[["0a98b1f6d9a4c747"]]},{"id":"427664cb1e4df863","type":"function","z":"cea01f70f2417588","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"toggle_cond1\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":1000,"wires":[["782ad8826352a54e","fabcea588b63f55a"]],"icon":"node-red/switch.svg","l":false},{"id":"1e1118a7b96c9111","type":"switch","z":"cea01f70f2417588","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":1000,"wires":[[],["427664cb1e4df863"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"782ad8826352a54e","type":"function","z":"cea01f70f2417588","name":"UPDATE query","func":"if(msg.complete === undefined){\n    context.set(\"telegramID\", msg.payload.chatId);\n    context.set(\"room\", msg.payload.content);\n    node.done();\n}\nelse{\n    let apartmentID = msg.payload[0].ApartmentId;\n    let room = context.get(\"room\");\n    let telegramID = context.get(\"telegramID\");\n    \n    \n    //CREATE THE QUERY\n    msg.payload = {\n        chatId: telegramID\n    }\n    msg.topic = \"UPDATE smartAirConditioner \"+\n                \"SET active = active^1 \"+\n                \"WHERE name = '\"+room+\"' \"+\n                \"AND apartmentID = \"+apartmentID+\"; \"+\n                \"SELECT active FROM smartAirConditioner \"+\n                \"WHERE name = '\"+room+\"' \"+\n                \"AND apartmentID = \"+apartmentID;\n    \n    //RESET THE STATUS OF FSM\n    global.set(\"\"+telegramID, \"\");\n    \n    //Send the query\n    node.send(msg);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":980,"wires":[["b76b5ae32efe5a08","335b57615b1aae5e"]]},{"id":"b76b5ae32efe5a08","type":"mysql","z":"cea01f70f2417588","mydb":"3d82484f23ccce80","name":"Execute","x":820,"y":1040,"wires":[["b48a65d51b8000a6"]]},{"id":"7c5ee3b7b1f4244c","type":"function","z":"cea01f70f2417588","name":"Ask name","func":"if(msg.complete === undefined){\n    context.set(\"telegramID\", msg.payload.chatId);\n    node.done();\n}\nelse{\n    let rooms = msg.payload.rooms;\n    msg.payload = {\n        content: \"What is the name of the room where is located \"+\n                 \"the conditioner you want to set?\",\n        type : \"message\",\n        chatId: context.get(\"telegramID\")\n    }\n    \n    \n    //Passiamo la lista delle stanze dell'utente come opzioni di\n    //risposta\n    let options = [];\n    for(let i = 0; i< rooms.length; i++){\n        options[i]=rooms[i];\n    }\n    msg.payload.options = options;\n    \n    //change status of FSM\n    global.set(\"\"+msg.payload.chatId, \"temp_cond1\");\n    \n    \n    node.send(msg);\n    \n    \n    let roomList = roomListAsString(rooms);\n    let msg2 = {\n        payload: {\n            content: roomList,\n            type: \"message\",\n            chatId: msg.payload.chatId\n        }\n    }\n    \n    //Wait for 0.5 seconds\n    await new Promise(r => setTimeout(r, 500));\n    \n    \n    node.send(msg2);\n    \n    node.done();\n}\n\n\n\nfunction roomListAsString(rooms){\n    let result = \"Possible answers: \";\n    rooms.forEach(room => {\n        result += room.name+\", \"\n    })\n    return result.substring(0, result.length-1);\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":1300,"wires":[["8144b74296d563ab"]]},{"id":"c098384f6fbc7dc8","type":"function","z":"cea01f70f2417588","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"temp_cond1\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":1400,"wires":[["770f945c2f25f0cd"]],"icon":"node-red/switch.svg","l":false},{"id":"233627f3003b070a","type":"switch","z":"cea01f70f2417588","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":1400,"wires":[[],["c098384f6fbc7dc8"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"06feb86f1c060ab4","type":"function","z":"cea01f70f2417588","name":"UPDATE query","func":"if(msg.complete === undefined){\n    context.set(\"telegramID\", msg.payload.chatId);\n    context.set(\"temperature\", msg.payload.content);\n    node.done();\n}\nelse{\n    let telegramID = context.get(\"telegramID\");\n    let apartmentID = msg.payload[0].ApartmentId;\n    let room = flow.get(telegramID+\"_set_cond1\");\n    let temperature = context.get(\"temperature\");\n\n    \n    let fahr = convertToFahrenheit(temperature);\n    //CREATE THE QUERY\n    msg.payload = {\n        chatId: telegramID\n    }\n    msg.topic = \"UPDATE smartAirConditioner \"+\n            \"SET ideal_temperature = \"+fahr+\" \"+\n            \"WHERE name = '\"+room+\"' \"+\n            \"AND apartmentID = \"+apartmentID;\n    \n    //RESET THE STATUS OF FSM and context and flow variables\n    global.set(\"\"+telegramID, \"\");\n    context.set(\"telegramID\", \"\");\n    context.set(\"temperature\", \"\");\n    flow.set(telegramID+\"_set_cond1\", \"\")\n    \n    //Send the query\n    node.send(msg);\n    node.done();\n}\n\n\nfunction convertToFahrenheit(celsius){\n    return (celsius * 1.8) + 32.0;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":1460,"wires":[["6ad741c19714ea03","88cd9d25678363ac"]]},{"id":"770f945c2f25f0cd","type":"function","z":"cea01f70f2417588","name":"Ask Temperature","func":"flow.set(msg.payload.chatId+\"_set_cond1\", msg.payload.content);\n\nmsg.payload = {\n    content: \"What is the temperature (in Celsius) that you want to set in this room?\",\n    type : \"message\",\n    chatId: msg.payload.chatId\n}\n\n//change status of FSM\nglobal.set(\"\"+msg.payload.chatId, \"temp_cond2\");\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":1400,"wires":[["8144b74296d563ab"]]},{"id":"8d4f7487e9dcce29","type":"function","z":"cea01f70f2417588","name":"filter","func":"if(global.get(\"\"+msg.payload.chatId) === \"temp_cond2\"){\n    return msg;\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":325,"y":1460,"wires":[["06feb86f1c060ab4","dd460ecd702b89ea"]],"icon":"node-red/switch.svg","l":false},{"id":"e46d79a8156ae08f","type":"switch","z":"cea01f70f2417588","name":"","property":"payload.content","propertyType":"msg","rules":[{"t":"regex","v":"^\\/[\\w]*","vt":"str","case":true},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":265,"y":1460,"wires":[[],["8d4f7487e9dcce29"]],"outputLabels":["It's a command","It's a message"],"l":false},{"id":"6ad741c19714ea03","type":"mysql","z":"cea01f70f2417588","mydb":"3d82484f23ccce80","name":"Execute","x":820,"y":1520,"wires":[["ea254564aa731386"]]},{"id":"c6d010135ff81c8c","type":"mqtt out","z":"cea01f70f2417588","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":670,"y":60,"wires":[]},{"id":"af1bb3f40aa38a1d","type":"mqtt in","z":"cea01f70f2417588","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":120,"wires":[["4e5745f9c630e5cb"]]},{"id":"5f723ac61f6649e0","type":"mqtt in","z":"cea01f70f2417588","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":200,"wires":[["b7840b77cfe461e7"]]},{"id":"39eb8b4c865d4fb5","type":"mqtt out","z":"cea01f70f2417588","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":750,"y":520,"wires":[]},{"id":"e1b0aa5ea583ced8","type":"mqtt in","z":"cea01f70f2417588","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":660,"wires":[["f5e8e09ffc4c489e"]]},{"id":"938ba1ec07dc0b27","type":"mqtt in","z":"cea01f70f2417588","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"0","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":1000,"wires":[["1e1118a7b96c9111"]]},{"id":"0a98b1f6d9a4c747","type":"mqtt out","z":"cea01f70f2417588","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1170,"y":900,"wires":[]},{"id":"81f317ab452d07b5","type":"mqtt in","z":"cea01f70f2417588","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":1400,"wires":[["233627f3003b070a"]]},{"id":"91df22732940cc70","type":"mqtt in","z":"cea01f70f2417588","name":"Receive from Telegram","topic":"cmd/slave/5/1/telegram/receive","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":1460,"wires":[["e46d79a8156ae08f"]]},{"id":"8144b74296d563ab","type":"mqtt out","z":"cea01f70f2417588","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1110,"y":1300,"wires":[]},{"id":"13802dc56127cf6c","type":"mqtt in","z":"cea01f70f2417588","name":"Cmd from Master","topic":"cmd/slave/5/1/conditioner/toggle","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":160,"y":900,"wires":[["52d81acab5228491","18bc2982c170220e"]]},{"id":"95aeb4d123040f42","type":"subflow:0c1959461b0dcd93","z":"cea01f70f2417588","name":"","x":360,"y":560,"wires":[["abf2bd9e53ddda9a"]]},{"id":"18bc2982c170220e","type":"subflow:0c1959461b0dcd93","z":"cea01f70f2417588","name":"","x":360,"y":940,"wires":[["52d81acab5228491"]]},{"id":"a98e360cde2891f0","type":"subflow:0c1959461b0dcd93","z":"cea01f70f2417588","name":"","x":360,"y":1340,"wires":[["7c5ee3b7b1f4244c"]]},{"id":"4b190dd38180fddf","type":"subflow:ec789f253aa282ed","z":"cea01f70f2417588","name":"","x":450,"y":200,"wires":[["61396d44398f852b","c9274ce435feaa13","957fa2b1e03298d3"],["61396d44398f852b"]]},{"id":"9979d779391db26c","type":"subflow:ec789f253aa282ed","z":"cea01f70f2417588","name":"","x":460,"y":700,"wires":[[],["b0eecd9354aaaf66"]]},{"id":"fabcea588b63f55a","type":"subflow:ec789f253aa282ed","z":"cea01f70f2417588","name":"","x":440,"y":1040,"wires":[[],["782ad8826352a54e"]]},{"id":"dd460ecd702b89ea","type":"subflow:ec789f253aa282ed","z":"cea01f70f2417588","name":"","x":460,"y":1500,"wires":[[],["06feb86f1c060ab4"]]},{"id":"952106de325d81a1","type":"function","z":"cea01f70f2417588","name":"Add fake data","func":"\nlet conditionerID = msg.payload[1][0].ID;\n\nmsg.topic = \"INSERT INTO temperature (conditionerID, year, month, \"+\n            \"day, hour, minute, second, recent_temperature, \"+\n            \"recent_humidity, target_temperature) VALUES (\"+\n            conditionerID+\", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\";\nnode.send(msg);\n\nmsg.topic = \"INSERT INTO humidity (conditionerID, year, month, \"+\n            \"day, hour, minute, second, recent_temperature, \"+\n            \"recent_humidity, target_humidity) VALUES (\"+\n            conditionerID+\", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\";\nnode.send(msg);\nnode.done();","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":340,"wires":[["be8a6e3d4cc97328"]]},{"id":"be8a6e3d4cc97328","type":"mysql","z":"cea01f70f2417588","mydb":"3d82484f23ccce80","name":"Execute","x":1160,"y":340,"wires":[[]]},{"id":"24195c9a325a0e2a","type":"change","z":"cea01f70f2417588","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"},{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":935,"y":280,"wires":[["c9274ce435feaa13"]],"l":false},{"id":"780ca93e2c60bbc3","type":"catch","z":"cea01f70f2417588","name":"Error 1","scope":["ce7a4f78da6c6e4e"],"uncaught":false,"x":650,"y":120,"wires":[["ed7f59ab2460a020"]]},{"id":"957fa2b1e03298d3","type":"function","z":"cea01f70f2417588","name":"Bad Answer","func":"if(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    msg.payload = {\n        content: \"Error during insertion\",\n        type: \"message\",\n        chatId: context.get('telegramId')\n    }\n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send(msg);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":120,"wires":[["15d979a7f803b6ef"]]},{"id":"15d979a7f803b6ef","type":"mqtt out","z":"cea01f70f2417588","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1150,"y":160,"wires":[]},{"id":"c9274ce435feaa13","type":"function","z":"cea01f70f2417588","name":"Good Answer","func":"if(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    msg.payload = {\n        content: \"New conditioner added\",\n        type: \"message\",\n        chatId: context.get('telegramId')\n    }\n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send(msg);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":920,"y":200,"wires":[["15d979a7f803b6ef"]]},{"id":"ed7f59ab2460a020","type":"change","z":"cea01f70f2417588","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"},{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":745,"y":120,"wires":[["957fa2b1e03298d3"]],"l":false},{"id":"ac85fd8a132d1250","type":"function","z":"cea01f70f2417588","name":"Good answer","func":"//CREATE THE MESSAGE FOR THE USER\n\nif(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    let telegramId = context.get('telegramId')\n    let result = msg.payload[2].affectedRows > 0;\n    if(result){\n        msg.payload = {\n            content: \"Conditioner deleted!\",\n            type: \"message\",\n            chatId: telegramId\n        }\n    }\n    else{\n        msg.payload = {\n            content: \"Conditioner not found!\",\n            type: \"message\",\n            chatId: telegramId\n        }\n    }\n    \n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send(msg);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1010,"y":700,"wires":[["658ba1a4d229808b"]]},{"id":"0190de41a1b9a3c0","type":"catch","z":"cea01f70f2417588","name":"Error 2","scope":["3f5be79cc67d8f40"],"uncaught":false,"x":770,"y":600,"wires":[["e424f9bbf15d59d5"]]},{"id":"e424f9bbf15d59d5","type":"change","z":"cea01f70f2417588","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"},{"t":"set","p":"payload","pt":"msg","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":865,"y":600,"wires":[["38582f7c9135915f"]],"l":false},{"id":"38582f7c9135915f","type":"function","z":"cea01f70f2417588","name":"Bad answer","func":"if(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    msg.payload = {\n        content: \"Error during deletion!\",\n        type: \"message\",\n        chatId: context.get('telegramId')\n    }\n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send(msg);\n    node.done();\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1010,"y":640,"wires":[["658ba1a4d229808b"]]},{"id":"658ba1a4d229808b","type":"mqtt out","z":"cea01f70f2417588","name":"Send to Telegram","topic":"cmd/master/telegram/send","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1210,"y":660,"wires":[]},{"id":"d015b5c1cc0a0f88","type":"function","z":"cea01f70f2417588","name":"Answer","func":"//CREATE THE MESSAGE FOR THE USER\n\nif(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    let telegramId = context.get('telegramId')\n    let result = msg.payload[0].changedRows > 0;\n    if(result){\n        let active = msg.payload[1][0].active[0];\n        node.send([null,{payload: active}])\n        if(active){\n            //Condizionatore attivato\n            msg.payload = {\n                content: \"Conditioner activated!\",\n                type: \"message\",\n                chatId: telegramId\n            }\n        }\n        else{\n            //Condizionatore disattivato\n            msg.payload = {\n                content: \"Conditioner deactivated!\",\n                type: \"message\",\n                chatId: telegramId\n            }\n        }\n    }\n    else{\n        //Condizionatore non trovato\n        msg.payload = {\n            content: \"Conditioner not found!\",\n            type: \"message\",\n            chatId: telegramId\n        }\n    }\n    \n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send([msg, msg]);\n    node.done();\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":980,"wires":[["0a98b1f6d9a4c747"],[]],"outputLabels":["","DEBUG"]},{"id":"b48a65d51b8000a6","type":"change","z":"cea01f70f2417588","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":915,"y":1040,"wires":[["d015b5c1cc0a0f88"]],"l":false},{"id":"335b57615b1aae5e","type":"change","z":"cea01f70f2417588","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":805,"y":980,"wires":[["d015b5c1cc0a0f88"]],"l":false},{"id":"88cd9d25678363ac","type":"change","z":"cea01f70f2417588","name":"","rules":[{"t":"delete","p":"complete","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":795,"y":1460,"wires":[["d7eb8975e19dbd37"]],"l":false},{"id":"d7eb8975e19dbd37","type":"function","z":"cea01f70f2417588","name":"Answer","func":"//CREATE THE MESSAGE FOR THE USER\n\nif(msg.complete === undefined){\n    context.set('telegramId', msg.payload.chatId)\n    node.done();\n}\nelse{\n    let telegramId = context.get('telegramId')\n    let jsonObj = JSON.parse(msg.payload);\n    node.send([null, {payload: jsonObj}]);\n    let result = jsonObj.changedRows > 0;\n    if(result){\n        msg.payload = {\n            content: \"Temperature changed!\",\n            type: \"message\",\n            chatId: telegramId\n        }\n    }\n    else{\n        //Condizionatore non trovato\n        msg.payload = {\n            content: \"Conditioner not found!\",\n            type: \"message\",\n            chatId: telegramId\n        }\n    }\n    \n    context.set('telegramId', '');\n    \n    //Reset the FSM\n    global.set(\"\"+msg.payload.chatId,\"\");\n    \n    node.send([msg, msg]);\n    node.done();\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1040,"y":1460,"wires":[["8144b74296d563ab"],[]],"outputLabels":["","DEBUG"]},{"id":"ea254564aa731386","type":"change","z":"cea01f70f2417588","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":915,"y":1520,"wires":[["b3cfe2f5766dd32e"]],"l":false},{"id":"b3cfe2f5766dd32e","type":"json","z":"cea01f70f2417588","name":"","property":"payload","action":"","pretty":false,"x":990,"y":1520,"wires":[["d7eb8975e19dbd37"]]},{"id":"35c16ef369955fc4","type":"tab","label":"Slave - Update","disabled":true,"info":"","env":[]},{"id":"92bfb2c55bf18ff3","type":"mqtt in","z":"35c16ef369955fc4","name":"Receive command from master","topic":"cmd/slave/5/1/update","qos":"2","datatype":"auto","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":190,"y":240,"wires":[["d95d0858563d727b"]]},{"id":"19cf301f320a5c82","type":"mqtt in","z":"35c16ef369955fc4","name":"Receive from boards","topic":"data/esp32/5/1/+/#","qos":"0","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":210,"y":460,"wires":[["1135d225be02a6a1"]]},{"id":"073cfaa2a3876dd9","type":"mqtt in","z":"35c16ef369955fc4","name":"Receive from TensorFlow","topic":"data/tensor/5/1","qos":"0","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":230,"y":520,"wires":[["1a615c2c49e84ae8"]]},{"id":"d5c8d808e316458f","type":"function","z":"35c16ef369955fc4","name":"README - TensorFlow","func":"/* THIS PART ACTIVATES TENSORFLOW */","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":240,"wires":[[]]},{"id":"a141889604730286","type":"mqtt out","z":"35c16ef369955fc4","name":"Send to boards","topic":"","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"54d52f8897b8d24f","x":1020,"y":200,"wires":[]},{"id":"1a615c2c49e84ae8","type":"subflow:52594df0649dc8a8","z":"35c16ef369955fc4","name":"","x":520,"y":520,"wires":[["b4f8e6173f97ee9b"]]},{"id":"5b7182b77e5a116a","type":"inject","z":"35c16ef369955fc4","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":200,"y":600,"wires":[["7997473ec8f6d79b"]]},{"id":"7997473ec8f6d79b","type":"function","z":"35c16ef369955fc4","name":"Test tensorflow","func":"let msg1 = {\n    topic: \"data/tensor/5/1\",\n    payload: {\n        predictedTemperature: 64.0,\n        predictedHumidity: 47.0\n    }\n}\nreturn msg1;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":600,"wires":[["1a615c2c49e84ae8"]]},{"id":"d95d0858563d727b","type":"subflow:f3610238122f600b","z":"35c16ef369955fc4","name":"","x":470,"y":240,"wires":[["dce412ca4ec37cc9"],["d5c8d808e316458f","9f5c13e76903a79d"]]},{"id":"dce412ca4ec37cc9","type":"function","z":"35c16ef369955fc4","name":"Send commands for each device","func":"let devicesList = msg.payload;\n\ndevicesList.forEach(device => {\n    let apNumber = device.apartment_number;\n    let floor = device.floor;\n    let devID = device.boardNumber;\n    let OMA_temp = 3303;\n    let OMA_hum = 3304;\n    \n    msg.payload = \" \";\n    msg.topic = `cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_temp}/0/5700`;\n    node.send(msg);\n    msg.topic = `cmd/esp32/${floor}/${apNumber}/${devID}/${OMA_hum}/0/5700`;\n    node.send(msg);\n});\nnode.done();","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":760,"y":200,"wires":[["a141889604730286"]]},{"id":"fb7c967671127bb6","type":"comment","z":"35c16ef369955fc4","name":"Receive command","info":"","x":150,"y":180,"wires":[]},{"id":"77c04604da4e7b55","type":"comment","z":"35c16ef369955fc4","name":"Receive data","info":"","x":130,"y":400,"wires":[]},{"id":"1135d225be02a6a1","type":"subflow:0ce11c1de156a737","z":"35c16ef369955fc4","name":"","x":770,"y":460,"wires":[["51fb5565cae563f8","eb6513e12a0e6d58"]]},{"id":"51fb5565cae563f8","type":"subflow:e1210922e077085b","z":"35c16ef369955fc4","name":"","x":1130,"y":500,"wires":[]},{"id":"b4f8e6173f97ee9b","type":"subflow:a3e070bf665a6c09","z":"35c16ef369955fc4","name":"","x":830,"y":520,"wires":[["51fb5565cae563f8","eb6513e12a0e6d58"]]},{"id":"eb6513e12a0e6d58","type":"subflow:80e09add32fe505c","z":"35c16ef369955fc4","name":"","x":1100,"y":420,"wires":[]},{"id":"9f5c13e76903a79d","type":"exec","z":"35c16ef369955fc4","command":"sudo docker run","addpay":"","append":"-it -v \"$(pwd)/smartBuildingResources\":/app/smartBuildingResources senjudocker/smartbuilding:version2.1_arm64","useSpawn":"false","timer":"","winHide":false,"oldrc":false,"name":"Activate Docker ","x":760,"y":300,"wires":[[],[],[]]},{"id":"34e48eba8b18bf88","type":"tab","label":"Slave - Dead Board","disabled":true,"info":"","env":[]},{"id":"57e87e2a06fa59f4","type":"mqtt in","z":"34e48eba8b18bf88","name":"LWT from Board","topic":"resp/esp32/5/1/+/3/0/4","qos":"2","datatype":"json","broker":"54d52f8897b8d24f","nl":false,"rap":true,"rh":0,"inputs":0,"x":180,"y":260,"wires":[["895fe812646464e6","98f58deffd36f5ba"]]},{"id":"895fe812646464e6","type":"function","z":"34e48eba8b18bf88","name":"Split and GET conditioner","func":"let topicParts = msg.topic.split('/');\nlet floor = topicParts[2];\nlet apartment = topicParts[3];\nlet devID = topicParts[4];\n\nlet status = msg.payload.v;\n\n\nlet query = {\n    topic: \"SELECT * FROM smartAirConditioner AS sac \"+\n            \"JOIN apartment AS ap \"+\n            \"ON sac.apartmentID = ap.apartmentID \"+\n            \"WHERE ap.apartment_number = \"+apartment+\" \"+\n            \"AND ap.floor = \"+floor+\" \"+\n            \"AND sac.boardNumber = \"+devID\n}\n\nif(status === \"Online\"){\n    return [query, null]\n}\nelse {\n    return [null, query]\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":260,"wires":[["45136fac0eb111ed"],["e60e505123c367a3"]],"outputLabels":["ONLINE","OFFLINE"]},{"id":"e60e505123c367a3","type":"mysql","z":"34e48eba8b18bf88","mydb":"3d82484f23ccce80","name":"Query","x":590,"y":300,"wires":[["f1a8275a35836f33"]]},{"id":"45136fac0eb111ed","type":"mysql","z":"34e48eba8b18bf88","mydb":"3d82484f23ccce80","name":"Query","x":590,"y":220,"wires":[["45c55636e3d7e7f7"]]},{"id":"45c55636e3d7e7f7","type":"function","z":"34e48eba8b18bf88","name":"Set Online","func":"let conditionerID = msg.payload[0].ID;\n\nmsg.topic = \"UPDATE smartAirConditioner \"+\n            \"SET connected = connected^1 \"+\n            \"WHERE ID = \"+conditionerID+\" \"+\n            \"AND connected = 0\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":220,"wires":[["27cbfe435fa3acab"]]},{"id":"f1a8275a35836f33","type":"function","z":"34e48eba8b18bf88","name":"Set Offline","func":"let conditionerID = msg.payload[0].ID;\n\nmsg.topic = \"UPDATE smartAirConditioner \"+\n            \"SET connected = connected^1 \"+\n            \"WHERE ID = \"+conditionerID+\" \"+\n            \"AND connected = 1\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":300,"wires":[["8ba7a241e44e3717"]]},{"id":"27cbfe435fa3acab","type":"mysql","z":"34e48eba8b18bf88","mydb":"3d82484f23ccce80","name":"Query","x":910,"y":220,"wires":[[]]},{"id":"8ba7a241e44e3717","type":"mysql","z":"34e48eba8b18bf88","mydb":"3d82484f23ccce80","name":"Query","x":910,"y":300,"wires":[[]]},{"id":"98f58deffd36f5ba","type":"debug","z":"34e48eba8b18bf88","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":390,"y":160,"wires":[]},{"id":"54d52f8897b8d24f","type":"mqtt-broker","name":"HiveMQ","broker":"broker.hivemq.com","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"3d82484f23ccce80","type":"MySQLdatabase","name":"Amazon MySQL","host":"db-iotsystems.cfbti5otvmx7.us-east-1.rds.amazonaws.com","port":"3306","db":"iot-sys","tz":"","charset":"UTF8"}]
